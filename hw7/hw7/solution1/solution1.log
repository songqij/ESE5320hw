==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_latency=64
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_interface -m_axi_offset=slave
INFO: [HLS 200-435] Setting 'open_solution -flow_target vitis' configuration: config_rtl -register_reset_num=3
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.016 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.25 seconds. Elapsed time: 2.8 seconds; current allocated memory: 209.571 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_33_3'(Filter.cpp:33:25) has been inferred on port 'gmem' (Filter.cpp:33:25)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.36 seconds. CPU system time: 0.13 seconds. Elapsed time: 3.59 seconds; current allocated memory: 211.252 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.253 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 212.555 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.770 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_43_5' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_33_3' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_38_4' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_43_5' (Filter.cpp:23) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_44_6' (Filter.cpp:23) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_7' (Filter.cpp:23) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:20)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 232.425 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_32_2' (Filter.cpp:23:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:49:27). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:58:51). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:34:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:45:20)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:49:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.1 seconds; current allocated memory: 225.517 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln54) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_33_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_38_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_38_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_43_5'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:45) on array 'buffer', Filter.cpp:24 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_43_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.47 seconds; current allocated memory: 226.781 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.82 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.87 seconds; current allocated memory: 228.335 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_7ns_18ns_18_4_1': 1 instance(s).
INFO: ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.108 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.36 seconds. CPU system time: 0.22 seconds. Elapsed time: 1.1 seconds; current allocated memory: 209.680 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_33_2'(Filter.cpp:33:25) has been inferred on port 'gmem' (Filter.cpp:33:25)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.32 seconds. CPU system time: 0.11 seconds. Elapsed time: 2.8 seconds; current allocated memory: 211.374 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 211.376 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.690 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.910 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_43_4' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_33_2' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_38_3' (Filter.cpp:23) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_43_4' (Filter.cpp:23) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_44_5' (Filter.cpp:23) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_6' (Filter.cpp:23) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:20)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 232.553 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_32_1' (Filter.cpp:23:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:49:27). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:58:51). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:34:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:45:20)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:49:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.616 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln54) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_33_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_38_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_38_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_43_4'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:45) on array 'buffer', Filter.cpp:24 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_43_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.36 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.44 seconds; current allocated memory: 226.897 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.82 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.87 seconds; current allocated memory: 228.424 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_18ns_18_4_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_compile -pipeline_loops=0
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: config_compile -pipeline_loops 0 
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.154 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.22 seconds. Elapsed time: 1.14 seconds; current allocated memory: 209.757 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_31_2'(Filter.cpp:31:25) has been inferred on port 'gmem' (Filter.cpp:31:25)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.3 seconds. CPU system time: 0.13 seconds. Elapsed time: 2.83 seconds; current allocated memory: 211.470 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.472 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.787 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 212.006 MB.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 232.581 MB.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:47:27). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:56:51). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:32:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:43:20)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:47:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.06 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.510 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.33 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 226.673 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.82 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.89 seconds; current allocated memory: 228.128 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_18ns_18_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.23 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.33 seconds; current allocated memory: 231.478 MB.
INFO: [RTMG 210-279] Implementing memory 'Filter_horizontal_HW_Coefficients_rom' using auto ROMs.
INFO: [RTMG 210-278] Implementing memory 'Filter_horizontal_HW_buffer_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.15 seconds. CPU system time: 0.08 seconds. Elapsed time: 3.28 seconds; current allocated memory: 242.949 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Filter_horizontal_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Filter_horizontal_HW.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 205.47 MHz
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_compile -pipeline_loops=0
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1464] Running solution command: config_compile -complex-mul-dsp=0
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: config_compile -pipeline_loops 0 
INFO: [XFORM 203-1171] Pipeline the innermost loop with trip count more than 0 or its parent loop when its trip count is less than or equal 0.
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.237 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.39 seconds. CPU system time: 0.19 seconds. Elapsed time: 1.14 seconds; current allocated memory: 209.810 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_32_2'(Filter.cpp:32:19) has been inferred on port 'gmem' (Filter.cpp:32:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.29 seconds. CPU system time: 0.17 seconds. Elapsed time: 2.81 seconds; current allocated memory: 211.522 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.524 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.857 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.058 MB.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_30_1' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'VITIS_LOOP_32_2' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'VITIS_LOOP_32_2' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'VITIS_LOOP_38_3' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'VITIS_LOOP_38_3' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'VITIS_LOOP_44_4' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-505] Ignored pipeline directive for loop 'VITIS_LOOP_54_6' (Filter.cpp:21) because its parent loop or function is pipelined.
WARNING: [XFORM 203-503] Ignored partial unroll directive for loop 'VITIS_LOOP_54_6' (Filter.cpp:21) because its parent loop or function is pipelined.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_32_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_44_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 473.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_45_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_54_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-102] Partitioning array 'buffer' (Filter.cpp:22) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...2844 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 29.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 29.37 seconds; current allocated memory: 265.849 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 69.06 seconds. CPU system time: 0.47 seconds. Elapsed time: 69.53 seconds; current allocated memory: 350.336 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln56_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.108 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.2 seconds. Elapsed time: 1.06 seconds; current allocated memory: 209.665 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_31_2'(Filter.cpp:31:21) has been inferred on port 'gmem' (Filter.cpp:31:21)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.3 seconds. CPU system time: 0.15 seconds. Elapsed time: 2.78 seconds; current allocated memory: 211.377 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 211.379 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.717 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.900 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_42_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_52_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_31_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_36_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 232.511 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_41_4' (Filter.cpp:21:7) in function 'Filter_horizontal_HW' more than one sub loop.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_30_1' (Filter.cpp:21:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:48:27). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:57:51). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:32:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:44:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:48:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 225.416 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln53) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_31_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_31_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_36_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_36_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_42_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_42_5'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_52_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_52_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.42 seconds; current allocated memory: 226.627 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.81 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.89 seconds; current allocated memory: 228.175 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_18ns_18_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.35 seconds; current allocated memory: 231.685 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.127 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.24 seconds. Elapsed time: 1.06 seconds; current allocated memory: 209.698 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_31_2'(Filter.cpp:31:21) has been inferred on port 'gmem' (Filter.cpp:31:21)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.3 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.81 seconds; current allocated memory: 211.349 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.350 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 212.665 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.885 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_31_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_36_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_41_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_42_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 232.541 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_30_1' (Filter.cpp:21:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:48:27). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:57:51). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:32:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:44:20)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:48:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 225.608 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln53) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_31_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_31_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_36_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_36_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_4'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:44) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_41_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.36 seconds. CPU system time: 0 seconds. Elapsed time: 0.43 seconds; current allocated memory: 226.856 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.83 seconds. CPU system time: 0 seconds. Elapsed time: 0.87 seconds; current allocated memory: 228.440 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_18ns_18_4_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.126 MB.
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.38 seconds. CPU system time: 0.21 seconds. Elapsed time: 1.02 seconds; current allocated memory: 209.696 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_42_5' (Filter.cpp:42:26) in function 'Filter_horizontal_HW' completely with a factor of 6 (Filter.cpp:42:26)
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_31_2'(Filter.cpp:31:21) has been inferred on port 'gmem' (Filter.cpp:31:21)
INFO: [HLS 214-115] Multiple burst reads of length 473 and bit width 8 in loop 'VITIS_LOOP_41_4'(Filter.cpp:41:25) has been inferred on port 'gmem' (Filter.cpp:41:25)
INFO: [HLS 214-115] Multiple burst writes of length 473 and bit width 8 in loop 'VITIS_LOOP_41_4'(Filter.cpp:41:25) has been inferred on port 'gmem' (Filter.cpp:41:25)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.42 seconds. CPU system time: 0.11 seconds. Elapsed time: 2.85 seconds; current allocated memory: 211.634 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.636 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.980 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.154 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_41_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_31_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_36_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_41_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 232.792 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_30_1' (Filter.cpp:21:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:32:19)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:44:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:48:25)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.865 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln53) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_31_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_31_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_36_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_36_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_41_4'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:44) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_41_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.36 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 227.074 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.83 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.87 seconds; current allocated memory: 228.615 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_7ns_8ns_18ns_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_15ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.141 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.22 seconds. Elapsed time: 0.99 seconds; current allocated memory: 209.743 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_24_2'(Filter.cpp:24:26) has been inferred on port 'gmem' (Filter.cpp:24:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.29 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.77 seconds; current allocated memory: 211.395 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.396 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.712 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.931 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_35_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_44_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 232.589 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_23_1' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:40:31). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:49:55). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:25:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:36:27)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:40:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.683 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln45) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_24_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:36) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.44 seconds; current allocated memory: 226.929 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.83 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.88 seconds; current allocated memory: 228.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.142 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.24 seconds. Elapsed time: 1.28 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.25 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.8 seconds; current allocated memory: 211.380 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.381 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.722 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.922 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_40_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 232.515 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_39_5' (Filter.cpp:21:9) in function 'Filter_horizontal_HW' more than one sub loop.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:46:31). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:55:55). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:30:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:42:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:46:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 225.496 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln51) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_40_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_40_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_50_7'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_50_7'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.42 seconds; current allocated memory: 226.692 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.8 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.94 seconds; current allocated memory: 228.178 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_7ns_18ns_18_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.141 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.22 seconds. Elapsed time: 1.2 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-188] Unrolling loop 'VITIS_LOOP_40_6' (Filter.cpp:40:30) in function 'Filter_horizontal_HW' partially with a factor of 3 (Filter.cpp:40:30)
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.31 seconds. CPU system time: 0.13 seconds. Elapsed time: 2.8 seconds; current allocated memory: 211.446 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.448 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.789 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.983 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_40_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 232.591 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_39_5' (Filter.cpp:21:9) in function 'Filter_horizontal_HW' more than one sub loop.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:46:31). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:55:55). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:30:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:42:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:46:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.744 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln51) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_40_6'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_3', Filter.cpp:42) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 3, Depth = 3, loop 'VITIS_LOOP_40_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_50_7'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_50_7'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.34 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 226.959 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.84 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.89 seconds; current allocated memory: 228.482 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.24 seconds. Elapsed time: 1.32 seconds; current allocated memory: 209.746 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-188] Unrolling loop 'VITIS_LOOP_40_6' (Filter.cpp:40:30) in function 'Filter_horizontal_HW' partially with a factor of 2 (Filter.cpp:40:30)
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.28 seconds. CPU system time: 0.15 seconds. Elapsed time: 3.04 seconds; current allocated memory: 211.430 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.431 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 212.772 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 211.962 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_40_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 232.568 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_39_5' (Filter.cpp:21:9) in function 'Filter_horizontal_HW' more than one sub loop.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:46:31). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:55:55). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:30:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:42:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:46:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 225.599 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln51) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_40_6'.
WARNING: [HLS 200-885] Unable to schedule 'store' operation ('buffer_addr_4_write_ln42', Filter.cpp:42) of variable 'buffer_load_1', Filter.cpp:42 on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 2, loop 'VITIS_LOOP_40_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_50_7'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_50_7'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.57 seconds; current allocated memory: 226.776 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.83 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.88 seconds; current allocated memory: 228.283 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.141 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.27 seconds. Elapsed time: 1.39 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_40_6' (Filter.cpp:40:30) in function 'Filter_horizontal_HW' completely with a factor of 6 (Filter.cpp:40:30)
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 214-115] Multiple burst reads of length 473 and bit width 8 in loop 'VITIS_LOOP_39_5'(Filter.cpp:39:26) has been inferred on port 'gmem' (Filter.cpp:39:26)
INFO: [HLS 214-115] Multiple burst writes of length 473 and bit width 8 in loop 'VITIS_LOOP_39_5'(Filter.cpp:39:26) has been inferred on port 'gmem' (Filter.cpp:39:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.37 seconds. CPU system time: 0.18 seconds. Elapsed time: 2.95 seconds; current allocated memory: 211.668 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.669 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 213.014 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.191 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_39_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_39_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_50_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 232.820 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:30:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:42:12)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:46:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.888 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln51) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_39_5'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:42) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_39_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.46 seconds; current allocated memory: 227.082 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.82 seconds. CPU system time: 0 seconds. Elapsed time: 0.88 seconds; current allocated memory: 228.621 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_7ns_18ns_18_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_15ns_16_4_1': 1 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.142 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.28 seconds. Elapsed time: 1.18 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_39_5' (Filter.cpp:39:26) in function 'Filter_horizontal_HW' completely with a factor of 473 (Filter.cpp:39:26)
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 28.12 seconds. CPU system time: 0.49 seconds. Elapsed time: 29.05 seconds; current allocated memory: 252.483 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 252.485 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1.68 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.76 seconds; current allocated memory: 297.857 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 12.15 seconds. CPU system time: 0 seconds. Elapsed time: 12.19 seconds; current allocated memory: 269.537 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_28_2' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_41_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-102] Partitioning array 'buffer' (Filter.cpp:22) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...2844 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 45.64 seconds. CPU system time: 0.03 seconds. Elapsed time: 45.75 seconds; current allocated memory: 327.256 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 79.4 seconds. CPU system time: 0.57 seconds. Elapsed time: 79.99 seconds; current allocated memory: 421.905 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_472) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_471) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_470) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_469) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_468) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_467) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_466) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_465) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_464) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_463) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_462) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_461) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_460) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_459) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_458) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_457) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_456) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_455) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_454) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_453) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_452) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_451) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_450) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_449) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_448) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_447) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_446) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_445) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_444) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_443) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_442) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_441) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_440) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_439) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_438) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_437) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_436) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_435) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_434) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_433) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_432) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_431) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_430) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_429) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_428) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_427) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_426) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_425) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_424) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_423) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_422) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_421) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_420) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_419) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_418) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_417) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_416) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_415) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_414) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_413) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_412) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_411) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_410) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_409) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_408) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_407) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_406) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_405) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_404) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_403) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_402) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_401) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_400) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_399) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_398) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_397) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_396) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_395) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_394) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_393) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_392) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_391) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_390) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_389) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_388) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_387) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_386) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_385) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_384) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_383) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_382) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_381) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_380) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_379) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_378) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_377) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_376) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_375) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_374) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_373) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_372) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_371) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_370) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_369) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_368) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_367) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_366) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_365) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_364) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_363) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_362) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_361) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_360) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_359) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_358) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_357) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_356) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_355) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_354) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_353) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_352) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_351) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_350) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_349) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_348) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_347) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_346) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_345) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_344) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_343) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_342) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_341) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_340) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_339) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_338) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_337) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_336) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_335) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_334) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_333) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_332) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_331) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_330) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_329) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_328) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_327) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_326) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_325) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_324) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_323) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_322) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_321) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_320) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_319) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_318) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_317) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_316) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_315) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_314) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_313) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_312) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_311) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_310) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_309) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_308) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_307) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_306) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_305) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_304) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_303) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_302) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_301) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_300) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_299) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_298) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_297) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_296) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_295) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_294) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_293) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_292) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_291) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_290) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_289) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_288) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_287) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_286) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_285) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_284) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_283) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_282) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_281) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_280) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_279) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_278) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_277) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_276) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_275) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_274) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_273) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_272) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_271) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_270) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_269) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_268) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_267) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_266) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_265) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_264) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_263) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_262) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_261) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_260) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_259) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_258) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_257) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_256) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_255) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_254) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_253) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_252) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_251) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_250) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_249) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_248) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_247) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_246) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_245) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_244) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_243) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_242) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_241) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_240) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_239) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_238) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_237) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_236) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_235) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_234) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_233) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_232) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_231) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_230) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_229) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_228) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_227) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_226) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_225) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_224) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_223) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_222) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_221) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_220) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_219) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_218) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_217) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_216) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_215) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_214) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_213) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_212) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_211) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_210) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_209) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_208) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_207) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_206) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_205) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_204) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_203) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_202) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_201) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_200) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_199) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_198) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_197) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_196) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_195) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_194) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_193) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_192) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_191) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_190) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_189) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_188) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_187) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_186) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_185) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_184) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_183) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_181) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_180) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_179) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_178) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_177) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_176) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_175) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_174) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_173) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_172) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_171) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_170) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_169) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_168) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_167) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_166) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_165) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_164) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_163) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_162) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_161) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_160) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_159) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_158) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_157) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_156) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_155) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_154) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_153) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_152) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_151) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_150) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_149) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_148) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_147) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_146) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_145) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_144) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_143) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_142) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_141) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_140) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_139) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_138) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_137) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_136) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_135) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_134) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_133) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_132) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_131) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_130) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_129) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_128) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_127) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_126) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_125) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_124) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_123) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_122) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_121) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_120) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_119) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_118) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_117) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_116) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_115) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_114) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_113) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_112) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_111) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_110) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_109) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_108) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_107) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_106) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_105) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_104) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_103) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_102) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_101) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_100) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_99) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_98) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_97) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_96) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_95) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_94) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_93) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_92) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_91) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_90) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_89) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_88) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_87) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_86) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_85) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_84) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_83) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_82) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_81) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_80) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_79) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_78) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_77) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_76) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_75) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_74) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_73) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_72) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_71) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_70) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_69) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_68) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_67) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_66) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_64) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_63) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_61) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_60) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_58) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_57) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_56) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_55) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_54) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_53) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_51) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_50) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_49) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_47) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_46) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_45) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_44) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_42) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_40) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_39) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_38) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_37) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_36) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_34) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_32) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_30) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_28) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_27) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_26) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_25) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_24) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_23) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_22) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_21) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_20) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_19) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_18) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_17) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_16) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_15) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_14) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_13) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_12) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_11) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_10) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.141 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.28 seconds. Elapsed time: 1.19 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_29_3'(Filter.cpp:29:26) has been inferred on port 'gmem' (Filter.cpp:29:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.3 seconds. CPU system time: 0.16 seconds. Elapsed time: 2.82 seconds; current allocated memory: 211.395 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.397 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.698 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.913 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_39_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_29_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_39_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_41_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_7' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.12 seconds; current allocated memory: 232.566 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-444] Inferring multiple bus burst read of a total cumulative length 473 on port 'gmem' (Filter.cpp:47:31). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-444] Inferring multiple bus burst write of a total cumulative length 473 on port 'gmem' (Filter.cpp:56:55). These data requests might be further partitioned to multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:30:23)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:43:27)
INFO: [HLS 200-472] Inferring partial write operation for 'buffer' (Filter.cpp:47:29)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.11 seconds; current allocated memory: 225.690 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln52) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_29_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_29_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_34_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_34_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_39_5'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('buffer_load_4', Filter.cpp:43) on array 'buffer', Filter.cpp:22 due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'buffer'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 6, Depth = 6, loop 'VITIS_LOOP_39_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 226.949 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.8 seconds. CPU system time: 0.05 seconds. Elapsed time: 0.87 seconds; current allocated memory: 228.474 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.142 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.32 seconds. CPU system time: 0.28 seconds. Elapsed time: 1.14 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_41_4'(Filter.cpp:41:28) has been inferred on port 'gmem' (Filter.cpp:41:28)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.34 seconds. CPU system time: 0.13 seconds. Elapsed time: 2.8 seconds; current allocated memory: 211.295 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.297 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.596 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.816 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_39_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_39_3' (Filter.cpp:21) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_41_4' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_47_5' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_54_6' (Filter.cpp:21) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-102] Partitioning array 'buffer' (Filter.cpp:22) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:19)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 232.409 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_28_2' (Filter.cpp:21:12) in function 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 225.246 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln55) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'.
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 5, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'): Unable to enforce a carried dependence constraint (II = 6, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:42) and bus read on port 'gmem' (Filter.cpp:42).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 7, Depth = 151, loop 'VITIS_LOOP_28_2_VITIS_LOOP_39_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 226.325 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.45 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 227.632 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.28 seconds. Elapsed time: 1.25 seconds; current allocated memory: 209.746 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_53_4'(Filter.cpp:53:28) has been inferred on port 'gmem' (Filter.cpp:53:28)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.31 seconds. CPU system time: 0.15 seconds. Elapsed time: 2.81 seconds; current allocated memory: 211.295 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.297 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.598 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.819 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_51_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_51_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_59_5' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_66_6' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-102] Partitioning array 'Input_buffer' (Filter.cpp:41) automatically.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.12 seconds; current allocated memory: 232.413 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_50_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.07 seconds; current allocated memory: 225.252 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln67) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'.
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 5, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'): Unable to enforce a carried dependence constraint (II = 6, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:54) and bus read on port 'gmem' (Filter.cpp:54).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 7, Depth = 151, loop 'VITIS_LOOP_50_2_VITIS_LOOP_51_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.24 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 226.330 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.45 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.5 seconds; current allocated memory: 227.636 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.27 seconds. Elapsed time: 1.21 seconds; current allocated memory: 209.829 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_145_5' (Filter.cpp:145:25) in function 'Filter_horizontal_HW' completely with a factor of 6 (Filter.cpp:145:25)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_151_6' (Filter.cpp:151:25) in function 'Filter_horizontal_HW' completely with a factor of 7 (Filter.cpp:151:25)
INFO: [HLS 214-115] Multiple burst reads of length 3 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:140:23)
INFO: [HLS 214-115] Multiple burst reads of length 237 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:141:23)
INFO: [HLS 214-115] Multiple burst writes of length 237 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:141:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.34 seconds. CPU system time: 0.18 seconds. Elapsed time: 2.85 seconds; current allocated memory: 211.432 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 211.434 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.812 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.957 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_140_3' (Filter.cpp:123) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-101] Partitioning array 'Input_local' (Filter.cpp:131) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Filter.cpp:140:83) in function 'Filter_horizontal_HW'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:120)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.11 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 232.659 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_139_2' (Filter.cpp:123:10) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 225.709 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln154) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_140_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_140_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_141_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, loop 'VITIS_LOOP_141_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.29 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 226.826 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.62 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.68 seconds; current allocated memory: 228.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.31 seconds; current allocated memory: 231.406 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.3 seconds. CPU system time: 0.07 seconds. Elapsed time: 2.46 seconds; current allocated memory: 243.272 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Filter_horizontal_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Filter_horizontal_HW.
INFO: [HLS 200-1603] Design has MAXI bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 205.47 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5.49 seconds. CPU system time: 0.55 seconds. Elapsed time: 8.39 seconds; current allocated memory: 243.746 MB.
INFO: [HLS 200-112] Total CPU user time: 7.94 seconds. Total CPU system time: 0.89 seconds. Total elapsed time: 10.59 seconds; peak allocated memory: 243.272 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.142 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.35 seconds. CPU system time: 0.28 seconds. Elapsed time: 1.21 seconds; current allocated memory: 209.744 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_54_4'(Filter.cpp:54:28) has been inferred on port 'gmem' (Filter.cpp:54:28)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.29 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.89 seconds; current allocated memory: 211.296 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.297 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.620 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.05 seconds; current allocated memory: 211.822 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_52_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_52_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_54_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_60_5' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_67_6' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-101] Partitioning array 'Coefficient_buffer'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'Input_buffer' (Filter.cpp:41) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 232.432 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_51_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 225.268 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln68) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'.
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 5, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'): Unable to enforce a carried dependence constraint (II = 6, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:55) and bus read on port 'gmem' (Filter.cpp:55).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 7, Depth = 151, loop 'VITIS_LOOP_51_2_VITIS_LOOP_52_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 226.348 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.46 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 227.654 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.36 seconds. CPU system time: 0.25 seconds. Elapsed time: 1.14 seconds; current allocated memory: 209.746 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 7 and bit width 8 in loop 'VITIS_LOOP_55_4'(Filter.cpp:55:28) has been inferred on port 'gmem' (Filter.cpp:55:28)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.25 seconds. CPU system time: 0.2 seconds. Elapsed time: 2.81 seconds; current allocated memory: 211.296 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.298 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 212.620 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.820 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_53_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_53_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_55_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_61_5' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_68_6' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-101] Partitioning array 'Coefficient_buffer'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'Input_buffer' (Filter.cpp:41) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 232.431 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_52_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.06 seconds. CPU system time: 0 seconds. Elapsed time: 0.08 seconds; current allocated memory: 225.267 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln69) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'.
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 5, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
WARNING: [HLS 200-880] The II Violation in module 'Filter_horizontal_HW' (loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'): Unable to enforce a carried dependence constraint (II = 6, distance = 1, offset = 1) between bus read on port 'gmem' (Filter.cpp:56) and bus read on port 'gmem' (Filter.cpp:56).
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 7, Depth = 151, loop 'VITIS_LOOP_52_2_VITIS_LOOP_53_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.32 seconds; current allocated memory: 226.345 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.46 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 227.651 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.39 seconds. CPU system time: 0.24 seconds. Elapsed time: 1.09 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_67_5' (Filter.cpp:67:19) in function 'Filter_horizontal_HW' completely with a factor of 6 (Filter.cpp:67:19)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_75_6' (Filter.cpp:75:30) in function 'Filter_horizontal_HW' completely with a factor of 7 (Filter.cpp:75:30)
INFO: [HLS 214-115] Multiple burst reads of length 3 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:54:23)
INFO: [HLS 214-115] Multiple burst reads of length 237 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:58:26)
INFO: [HLS 214-115] Multiple burst writes of length 237 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:58:26)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.31 seconds. CPU system time: 0.15 seconds. Elapsed time: 2.82 seconds; current allocated memory: 211.415 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.417 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.793 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.939 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-101] Partitioning array 'Input_buffer' (Filter.cpp:41) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Filter.cpp:56:25) in function 'Filter_horizontal_HW'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.1 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 232.642 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_53_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.08 seconds. CPU system time: 0 seconds. Elapsed time: 0.09 seconds; current allocated memory: 225.694 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln77) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_54_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_54_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_58_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 7, loop 'VITIS_LOOP_58_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 226.828 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.63 seconds. CPU system time: 0 seconds. Elapsed time: 0.68 seconds; current allocated memory: 228.198 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_16ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.22 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.32 seconds; current allocated memory: 231.405 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.32 seconds. CPU system time: 0.07 seconds. Elapsed time: 2.61 seconds; current allocated memory: 243.254 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Filter_horizontal_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Filter_horizontal_HW.
INFO: [HLS 200-1603] Design has MAXI bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 205.47 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5.46 seconds. CPU system time: 0.51 seconds. Elapsed time: 8.37 seconds; current allocated memory: 243.728 MB.
INFO: [HLS 200-112] Total CPU user time: 7.91 seconds. Total CPU system time: 0.88 seconds. Total elapsed time: 11.96 seconds; peak allocated memory: 243.254 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.143 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.37 seconds. CPU system time: 0.25 seconds. Elapsed time: 1.22 seconds; current allocated memory: 209.745 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 3 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:55:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.26 seconds. CPU system time: 0.14 seconds. Elapsed time: 2.75 seconds; current allocated memory: 211.296 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.296 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.673 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 211.851 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_60_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_60_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_69_5' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_76_6' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-101] Partitioning array 'Coefficient_buffer'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'Input_buffer' (Filter.cpp:41) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Filter.cpp:57:25) in function 'Filter_horizontal_HW'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 232.661 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_53_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.09 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 225.803 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln77) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_55_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_60_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 145, loop 'VITIS_LOOP_60_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0 seconds. Elapsed time: 0.35 seconds; current allocated memory: 227.040 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.64 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.69 seconds; current allocated memory: 228.592 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_15ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.29 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.37 seconds; current allocated memory: 232.523 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.39 seconds. CPU system time: 0.1 seconds. Elapsed time: 2.69 seconds; current allocated memory: 244.868 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Filter_horizontal_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Filter_horizontal_HW.
INFO: [HLS 200-1603] Design has MAXI bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 205.47 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5.54 seconds. CPU system time: 0.53 seconds. Elapsed time: 8.56 seconds; current allocated memory: 245.337 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 6.667ns.
INFO: [HLS 200-10] Setting target device to 'xczu3eg-sbva484-1-i'
INFO: [HLS 200-1505] Using flow_target 'vitis'
INFO: [HLS 200-1464] Running solution command: config_rtl -register_reset_num=3
INFO: [HLS 200-1464] Running solution command: config_interface -default_interface=kernel
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_alignment_byte_size=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_latency=64
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_max_widen_bitwidth=512
INFO: [HLS 200-1464] Running solution command: config_interface -m_axi_offset=slave
INFO: [HLS 200-1510] Running: set_part xczu3eg-sbva484-1-i 
INFO: [HLS 200-1510] Running: create_clock -period 150MHz -name default 
INFO: [HLS 200-1510] Running: config_rtl -register_reset_num 3 
INFO: [HLS 200-1510] Running: config_interface -m_axi_alignment_byte_size 64 -m_axi_latency 64 -m_axi_max_widen_bitwidth 512 -m_axi_offset slave 
INFO: [HLS 200-1510] Running: set_directive_top -name Filter_horizontal_HW Filter_horizontal_HW 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.02 seconds; current allocated memory: 208.142 MB.
INFO: [HLS 200-10] Analyzing design file 'Compress.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Differentiate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Filter.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'Scale.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0.33 seconds. CPU system time: 0.23 seconds. Elapsed time: 1.27 seconds; current allocated memory: 209.744 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vitis' flow target.
INFO: [HLS 214-115] Multiple burst reads of length 3 and bit width 16 has been inferred on port 'gmem' (Filter.cpp:55:23)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 2.25 seconds. CPU system time: 0.16 seconds. Elapsed time: 2.76 seconds; current allocated memory: 211.294 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 211.295 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.04 seconds; current allocated memory: 212.673 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 211.853 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_60_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_55_3' (Filter.cpp:34) in function 'Filter_horizontal_HW' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_60_4' (Filter.cpp:34) in function 'Filter_horizontal_HW' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_69_5' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 6.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_76_6' (Filter.cpp:34) in function 'Filter_horizontal_HW' completely with a factor of 7.
INFO: [XFORM 203-101] Partitioning array 'Coefficient_buffer'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'Input_buffer' (Filter.cpp:41) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (Filter.cpp:57:25) in function 'Filter_horizontal_HW'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'Filter_horizontal_HW' (Filter.cpp:32)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.09 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.2 seconds; current allocated memory: 232.663 MB.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_53_2' (Filter.cpp:34:12) in function 'Filter_horizontal_HW' more than one sub loop.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.07 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 225.787 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'Filter_horizontal_HW' ...
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Input' to 'Filter_horizontal_HW/Input_r' to avoid the conflict with HDL keywords or other object names.
WARNING: [SYN 201-107] Renaming port name 'Filter_horizontal_HW/Output' to 'Filter_horizontal_HW/Output_r' to avoid the conflict with HDL keywords or other object names.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln77) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_55_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3, loop 'VITIS_LOOP_55_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_60_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 145, loop 'VITIS_LOOP_60_4'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.29 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 227.042 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.64 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.71 seconds; current allocated memory: 228.594 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'Filter_horizontal_HW' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Input_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'Filter_horizontal_HW/Output_r' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'Filter_horizontal_HW' to 's_axilite & ap_ctrl_chain'.
INFO: [RTGEN 206-100] Bundling port 'Input_r', 'Output_r' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_8ns_15ns_16_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'Filter_horizontal_HW'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.29 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.36 seconds; current allocated memory: 232.540 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.42 seconds. CPU system time: 0.06 seconds. Elapsed time: 2.68 seconds; current allocated memory: 244.869 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for Filter_horizontal_HW.
INFO: [VLOG 209-307] Generating Verilog RTL for Filter_horizontal_HW.
INFO: [HLS 200-1603] Design has MAXI bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 205.47 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5.51 seconds. CPU system time: 0.52 seconds. Elapsed time: 8.68 seconds; current allocated memory: 245.338 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
