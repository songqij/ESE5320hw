// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lzw_lzw,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=79,HLS_SYN_DSP=0,HLS_SYN_FF=4910,HLS_SYN_LUT=8660,HLS_VERSION=2020_2}" *)

module lzw (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_aximm1_AWVALID,
        m_axi_aximm1_AWREADY,
        m_axi_aximm1_AWADDR,
        m_axi_aximm1_AWID,
        m_axi_aximm1_AWLEN,
        m_axi_aximm1_AWSIZE,
        m_axi_aximm1_AWBURST,
        m_axi_aximm1_AWLOCK,
        m_axi_aximm1_AWCACHE,
        m_axi_aximm1_AWPROT,
        m_axi_aximm1_AWQOS,
        m_axi_aximm1_AWREGION,
        m_axi_aximm1_AWUSER,
        m_axi_aximm1_WVALID,
        m_axi_aximm1_WREADY,
        m_axi_aximm1_WDATA,
        m_axi_aximm1_WSTRB,
        m_axi_aximm1_WLAST,
        m_axi_aximm1_WID,
        m_axi_aximm1_WUSER,
        m_axi_aximm1_ARVALID,
        m_axi_aximm1_ARREADY,
        m_axi_aximm1_ARADDR,
        m_axi_aximm1_ARID,
        m_axi_aximm1_ARLEN,
        m_axi_aximm1_ARSIZE,
        m_axi_aximm1_ARBURST,
        m_axi_aximm1_ARLOCK,
        m_axi_aximm1_ARCACHE,
        m_axi_aximm1_ARPROT,
        m_axi_aximm1_ARQOS,
        m_axi_aximm1_ARREGION,
        m_axi_aximm1_ARUSER,
        m_axi_aximm1_RVALID,
        m_axi_aximm1_RREADY,
        m_axi_aximm1_RDATA,
        m_axi_aximm1_RLAST,
        m_axi_aximm1_RID,
        m_axi_aximm1_RUSER,
        m_axi_aximm1_RRESP,
        m_axi_aximm1_BVALID,
        m_axi_aximm1_BREADY,
        m_axi_aximm1_BRESP,
        m_axi_aximm1_BID,
        m_axi_aximm1_BUSER,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_aximm2_AWVALID,
        m_axi_aximm2_AWREADY,
        m_axi_aximm2_AWADDR,
        m_axi_aximm2_AWID,
        m_axi_aximm2_AWLEN,
        m_axi_aximm2_AWSIZE,
        m_axi_aximm2_AWBURST,
        m_axi_aximm2_AWLOCK,
        m_axi_aximm2_AWCACHE,
        m_axi_aximm2_AWPROT,
        m_axi_aximm2_AWQOS,
        m_axi_aximm2_AWREGION,
        m_axi_aximm2_AWUSER,
        m_axi_aximm2_WVALID,
        m_axi_aximm2_WREADY,
        m_axi_aximm2_WDATA,
        m_axi_aximm2_WSTRB,
        m_axi_aximm2_WLAST,
        m_axi_aximm2_WID,
        m_axi_aximm2_WUSER,
        m_axi_aximm2_ARVALID,
        m_axi_aximm2_ARREADY,
        m_axi_aximm2_ARADDR,
        m_axi_aximm2_ARID,
        m_axi_aximm2_ARLEN,
        m_axi_aximm2_ARSIZE,
        m_axi_aximm2_ARBURST,
        m_axi_aximm2_ARLOCK,
        m_axi_aximm2_ARCACHE,
        m_axi_aximm2_ARPROT,
        m_axi_aximm2_ARQOS,
        m_axi_aximm2_ARREGION,
        m_axi_aximm2_ARUSER,
        m_axi_aximm2_RVALID,
        m_axi_aximm2_RREADY,
        m_axi_aximm2_RDATA,
        m_axi_aximm2_RLAST,
        m_axi_aximm2_RID,
        m_axi_aximm2_RUSER,
        m_axi_aximm2_RRESP,
        m_axi_aximm2_BVALID,
        m_axi_aximm2_BREADY,
        m_axi_aximm2_BRESP,
        m_axi_aximm2_BID,
        m_axi_aximm2_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;
parameter    C_M_AXI_AXIMM1_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM1_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM1_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM1_CACHE_VALUE = 3;
parameter    C_M_AXI_ID_WIDTH = 1;
parameter    C_M_AXI_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AWUSER_WIDTH = 1;
parameter    C_M_AXI_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WUSER_WIDTH = 1;
parameter    C_M_AXI_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_AXIMM2_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM2_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM2_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM2_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_aximm1_AWVALID;
input   m_axi_aximm1_AWREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_AWADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_AWID;
output  [7:0] m_axi_aximm1_AWLEN;
output  [2:0] m_axi_aximm1_AWSIZE;
output  [1:0] m_axi_aximm1_AWBURST;
output  [1:0] m_axi_aximm1_AWLOCK;
output  [3:0] m_axi_aximm1_AWCACHE;
output  [2:0] m_axi_aximm1_AWPROT;
output  [3:0] m_axi_aximm1_AWQOS;
output  [3:0] m_axi_aximm1_AWREGION;
output  [C_M_AXI_AXIMM1_AWUSER_WIDTH - 1:0] m_axi_aximm1_AWUSER;
output   m_axi_aximm1_WVALID;
input   m_axi_aximm1_WREADY;
output  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_WDATA;
output  [C_M_AXI_AXIMM1_WSTRB_WIDTH - 1:0] m_axi_aximm1_WSTRB;
output   m_axi_aximm1_WLAST;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_WID;
output  [C_M_AXI_AXIMM1_WUSER_WIDTH - 1:0] m_axi_aximm1_WUSER;
output   m_axi_aximm1_ARVALID;
input   m_axi_aximm1_ARREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_ARADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_ARID;
output  [7:0] m_axi_aximm1_ARLEN;
output  [2:0] m_axi_aximm1_ARSIZE;
output  [1:0] m_axi_aximm1_ARBURST;
output  [1:0] m_axi_aximm1_ARLOCK;
output  [3:0] m_axi_aximm1_ARCACHE;
output  [2:0] m_axi_aximm1_ARPROT;
output  [3:0] m_axi_aximm1_ARQOS;
output  [3:0] m_axi_aximm1_ARREGION;
output  [C_M_AXI_AXIMM1_ARUSER_WIDTH - 1:0] m_axi_aximm1_ARUSER;
input   m_axi_aximm1_RVALID;
output   m_axi_aximm1_RREADY;
input  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_RDATA;
input   m_axi_aximm1_RLAST;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_RID;
input  [C_M_AXI_AXIMM1_RUSER_WIDTH - 1:0] m_axi_aximm1_RUSER;
input  [1:0] m_axi_aximm1_RRESP;
input   m_axi_aximm1_BVALID;
output   m_axi_aximm1_BREADY;
input  [1:0] m_axi_aximm1_BRESP;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_BID;
input  [C_M_AXI_AXIMM1_BUSER_WIDTH - 1:0] m_axi_aximm1_BUSER;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_aximm2_AWVALID;
input   m_axi_aximm2_AWREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_AWADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_AWID;
output  [7:0] m_axi_aximm2_AWLEN;
output  [2:0] m_axi_aximm2_AWSIZE;
output  [1:0] m_axi_aximm2_AWBURST;
output  [1:0] m_axi_aximm2_AWLOCK;
output  [3:0] m_axi_aximm2_AWCACHE;
output  [2:0] m_axi_aximm2_AWPROT;
output  [3:0] m_axi_aximm2_AWQOS;
output  [3:0] m_axi_aximm2_AWREGION;
output  [C_M_AXI_AXIMM2_AWUSER_WIDTH - 1:0] m_axi_aximm2_AWUSER;
output   m_axi_aximm2_WVALID;
input   m_axi_aximm2_WREADY;
output  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_WDATA;
output  [C_M_AXI_AXIMM2_WSTRB_WIDTH - 1:0] m_axi_aximm2_WSTRB;
output   m_axi_aximm2_WLAST;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_WID;
output  [C_M_AXI_AXIMM2_WUSER_WIDTH - 1:0] m_axi_aximm2_WUSER;
output   m_axi_aximm2_ARVALID;
input   m_axi_aximm2_ARREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_ARADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_ARID;
output  [7:0] m_axi_aximm2_ARLEN;
output  [2:0] m_axi_aximm2_ARSIZE;
output  [1:0] m_axi_aximm2_ARBURST;
output  [1:0] m_axi_aximm2_ARLOCK;
output  [3:0] m_axi_aximm2_ARCACHE;
output  [2:0] m_axi_aximm2_ARPROT;
output  [3:0] m_axi_aximm2_ARQOS;
output  [3:0] m_axi_aximm2_ARREGION;
output  [C_M_AXI_AXIMM2_ARUSER_WIDTH - 1:0] m_axi_aximm2_ARUSER;
input   m_axi_aximm2_RVALID;
output   m_axi_aximm2_RREADY;
input  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_RDATA;
input   m_axi_aximm2_RLAST;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_RID;
input  [C_M_AXI_AXIMM2_RUSER_WIDTH - 1:0] m_axi_aximm2_RUSER;
input  [1:0] m_axi_aximm2_RRESP;
input   m_axi_aximm2_BVALID;
output   m_axi_aximm2_BREADY;
input  [1:0] m_axi_aximm2_BRESP;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_BID;
input  [C_M_AXI_AXIMM2_BUSER_WIDTH - 1:0] m_axi_aximm2_BUSER;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [63:0] in_r;
wire   [63:0] chunk_size;
wire   [63:0] compressed_data;
wire   [63:0] compressed_size;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    aximm1_AWREADY;
wire    aximm1_WREADY;
wire    aximm1_ARREADY;
wire    aximm1_RVALID;
wire   [7:0] aximm1_RDATA;
wire    aximm1_RLAST;
wire   [0:0] aximm1_RID;
wire   [0:0] aximm1_RUSER;
wire   [1:0] aximm1_RRESP;
wire    aximm1_BVALID;
wire   [1:0] aximm1_BRESP;
wire   [0:0] aximm1_BID;
wire   [0:0] aximm1_BUSER;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
wire    aximm2_AWREADY;
wire    aximm2_WREADY;
wire    aximm2_ARREADY;
wire    aximm2_RVALID;
wire   [7:0] aximm2_RDATA;
wire    aximm2_RLAST;
wire   [0:0] aximm2_RID;
wire   [0:0] aximm2_RUSER;
wire   [1:0] aximm2_RRESP;
wire    aximm2_BVALID;
wire   [1:0] aximm2_BRESP;
wire   [0:0] aximm2_BID;
wire   [0:0] aximm2_BUSER;
wire    Block_split1_proc9_U0_ap_start;
wire    Block_split1_proc9_U0_ap_done;
wire    Block_split1_proc9_U0_ap_continue;
wire    Block_split1_proc9_U0_ap_idle;
wire    Block_split1_proc9_U0_ap_ready;
wire    Block_split1_proc9_U0_start_out;
wire    Block_split1_proc9_U0_start_write;
wire    Block_split1_proc9_U0_m_axi_gmem_AWVALID;
wire   [63:0] Block_split1_proc9_U0_m_axi_gmem_AWADDR;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_AWID;
wire   [31:0] Block_split1_proc9_U0_m_axi_gmem_AWLEN;
wire   [2:0] Block_split1_proc9_U0_m_axi_gmem_AWSIZE;
wire   [1:0] Block_split1_proc9_U0_m_axi_gmem_AWBURST;
wire   [1:0] Block_split1_proc9_U0_m_axi_gmem_AWLOCK;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_AWCACHE;
wire   [2:0] Block_split1_proc9_U0_m_axi_gmem_AWPROT;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_AWQOS;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_AWREGION;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_AWUSER;
wire    Block_split1_proc9_U0_m_axi_gmem_WVALID;
wire   [31:0] Block_split1_proc9_U0_m_axi_gmem_WDATA;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_WSTRB;
wire    Block_split1_proc9_U0_m_axi_gmem_WLAST;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_WID;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_WUSER;
wire    Block_split1_proc9_U0_m_axi_gmem_ARVALID;
wire   [63:0] Block_split1_proc9_U0_m_axi_gmem_ARADDR;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_ARID;
wire   [31:0] Block_split1_proc9_U0_m_axi_gmem_ARLEN;
wire   [2:0] Block_split1_proc9_U0_m_axi_gmem_ARSIZE;
wire   [1:0] Block_split1_proc9_U0_m_axi_gmem_ARBURST;
wire   [1:0] Block_split1_proc9_U0_m_axi_gmem_ARLOCK;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_ARCACHE;
wire   [2:0] Block_split1_proc9_U0_m_axi_gmem_ARPROT;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_ARQOS;
wire   [3:0] Block_split1_proc9_U0_m_axi_gmem_ARREGION;
wire   [0:0] Block_split1_proc9_U0_m_axi_gmem_ARUSER;
wire    Block_split1_proc9_U0_m_axi_gmem_RREADY;
wire    Block_split1_proc9_U0_m_axi_gmem_BREADY;
wire   [31:0] Block_split1_proc9_U0_gmem_load_out_out_din;
wire    Block_split1_proc9_U0_gmem_load_out_out_write;
wire   [63:0] Block_split1_proc9_U0_in_out_din;
wire    Block_split1_proc9_U0_in_out_write;
wire   [63:0] Block_split1_proc9_U0_compressed_data_out_din;
wire    Block_split1_proc9_U0_compressed_data_out_write;
wire   [63:0] Block_split1_proc9_U0_compressed_size_out_din;
wire    Block_split1_proc9_U0_compressed_size_out_write;
wire    load_input_U0_ap_start;
wire    load_input_U0_ap_done;
wire    load_input_U0_ap_continue;
wire    load_input_U0_ap_idle;
wire    load_input_U0_ap_ready;
wire    load_input_U0_start_out;
wire    load_input_U0_start_write;
wire    load_input_U0_m_axi_aximm1_AWVALID;
wire   [63:0] load_input_U0_m_axi_aximm1_AWADDR;
wire   [0:0] load_input_U0_m_axi_aximm1_AWID;
wire   [31:0] load_input_U0_m_axi_aximm1_AWLEN;
wire   [2:0] load_input_U0_m_axi_aximm1_AWSIZE;
wire   [1:0] load_input_U0_m_axi_aximm1_AWBURST;
wire   [1:0] load_input_U0_m_axi_aximm1_AWLOCK;
wire   [3:0] load_input_U0_m_axi_aximm1_AWCACHE;
wire   [2:0] load_input_U0_m_axi_aximm1_AWPROT;
wire   [3:0] load_input_U0_m_axi_aximm1_AWQOS;
wire   [3:0] load_input_U0_m_axi_aximm1_AWREGION;
wire   [0:0] load_input_U0_m_axi_aximm1_AWUSER;
wire    load_input_U0_m_axi_aximm1_WVALID;
wire   [7:0] load_input_U0_m_axi_aximm1_WDATA;
wire   [0:0] load_input_U0_m_axi_aximm1_WSTRB;
wire    load_input_U0_m_axi_aximm1_WLAST;
wire   [0:0] load_input_U0_m_axi_aximm1_WID;
wire   [0:0] load_input_U0_m_axi_aximm1_WUSER;
wire    load_input_U0_m_axi_aximm1_ARVALID;
wire   [63:0] load_input_U0_m_axi_aximm1_ARADDR;
wire   [0:0] load_input_U0_m_axi_aximm1_ARID;
wire   [31:0] load_input_U0_m_axi_aximm1_ARLEN;
wire   [2:0] load_input_U0_m_axi_aximm1_ARSIZE;
wire   [1:0] load_input_U0_m_axi_aximm1_ARBURST;
wire   [1:0] load_input_U0_m_axi_aximm1_ARLOCK;
wire   [3:0] load_input_U0_m_axi_aximm1_ARCACHE;
wire   [2:0] load_input_U0_m_axi_aximm1_ARPROT;
wire   [3:0] load_input_U0_m_axi_aximm1_ARQOS;
wire   [3:0] load_input_U0_m_axi_aximm1_ARREGION;
wire   [0:0] load_input_U0_m_axi_aximm1_ARUSER;
wire    load_input_U0_m_axi_aximm1_RREADY;
wire    load_input_U0_m_axi_aximm1_BREADY;
wire   [7:0] load_input_U0_inStream_din;
wire    load_input_U0_inStream_write;
wire    load_input_U0_in_r_read;
wire    load_input_U0_gmem_load_loc_read;
wire   [31:0] load_input_U0_gmem_load_loc_out_din;
wire    load_input_U0_gmem_load_loc_out_write;
wire    compress_stream_U0_ap_start;
wire    compress_stream_U0_ap_done;
wire    compress_stream_U0_ap_continue;
wire    compress_stream_U0_ap_idle;
wire    compress_stream_U0_ap_ready;
wire    compress_stream_U0_start_out;
wire    compress_stream_U0_start_write;
wire    compress_stream_U0_chunk_arr_stream_read;
wire   [15:0] compress_stream_U0_codeword_stream_din;
wire    compress_stream_U0_codeword_stream_write;
wire    compress_stream_U0_gmem_load_loc_read;
wire    write_output_stream_U0_ap_start;
wire    write_output_stream_U0_ap_done;
wire    write_output_stream_U0_ap_continue;
wire    write_output_stream_U0_ap_idle;
wire    write_output_stream_U0_ap_ready;
wire    write_output_stream_U0_codeword_stream_read;
wire   [7:0] write_output_stream_U0_output_hw_stream_din;
wire    write_output_stream_U0_output_hw_stream_write;
wire   [31:0] write_output_stream_U0_compressed_size_stream_din;
wire    write_output_stream_U0_compressed_size_stream_write;
wire    store_result_U0_ap_start;
wire    store_result_U0_ap_done;
wire    store_result_U0_ap_continue;
wire    store_result_U0_ap_idle;
wire    store_result_U0_ap_ready;
wire    store_result_U0_compressed_size_stream_read;
wire    store_result_U0_output_hw_stream_read;
wire    store_result_U0_m_axi_aximm2_AWVALID;
wire   [63:0] store_result_U0_m_axi_aximm2_AWADDR;
wire   [0:0] store_result_U0_m_axi_aximm2_AWID;
wire   [31:0] store_result_U0_m_axi_aximm2_AWLEN;
wire   [2:0] store_result_U0_m_axi_aximm2_AWSIZE;
wire   [1:0] store_result_U0_m_axi_aximm2_AWBURST;
wire   [1:0] store_result_U0_m_axi_aximm2_AWLOCK;
wire   [3:0] store_result_U0_m_axi_aximm2_AWCACHE;
wire   [2:0] store_result_U0_m_axi_aximm2_AWPROT;
wire   [3:0] store_result_U0_m_axi_aximm2_AWQOS;
wire   [3:0] store_result_U0_m_axi_aximm2_AWREGION;
wire   [0:0] store_result_U0_m_axi_aximm2_AWUSER;
wire    store_result_U0_m_axi_aximm2_WVALID;
wire   [7:0] store_result_U0_m_axi_aximm2_WDATA;
wire   [0:0] store_result_U0_m_axi_aximm2_WSTRB;
wire    store_result_U0_m_axi_aximm2_WLAST;
wire   [0:0] store_result_U0_m_axi_aximm2_WID;
wire   [0:0] store_result_U0_m_axi_aximm2_WUSER;
wire    store_result_U0_m_axi_aximm2_ARVALID;
wire   [63:0] store_result_U0_m_axi_aximm2_ARADDR;
wire   [0:0] store_result_U0_m_axi_aximm2_ARID;
wire   [31:0] store_result_U0_m_axi_aximm2_ARLEN;
wire   [2:0] store_result_U0_m_axi_aximm2_ARSIZE;
wire   [1:0] store_result_U0_m_axi_aximm2_ARBURST;
wire   [1:0] store_result_U0_m_axi_aximm2_ARLOCK;
wire   [3:0] store_result_U0_m_axi_aximm2_ARCACHE;
wire   [2:0] store_result_U0_m_axi_aximm2_ARPROT;
wire   [3:0] store_result_U0_m_axi_aximm2_ARQOS;
wire   [3:0] store_result_U0_m_axi_aximm2_ARREGION;
wire   [0:0] store_result_U0_m_axi_aximm2_ARUSER;
wire    store_result_U0_m_axi_aximm2_RREADY;
wire    store_result_U0_m_axi_aximm2_BREADY;
wire    store_result_U0_m_axi_gmem_AWVALID;
wire   [63:0] store_result_U0_m_axi_gmem_AWADDR;
wire   [0:0] store_result_U0_m_axi_gmem_AWID;
wire   [31:0] store_result_U0_m_axi_gmem_AWLEN;
wire   [2:0] store_result_U0_m_axi_gmem_AWSIZE;
wire   [1:0] store_result_U0_m_axi_gmem_AWBURST;
wire   [1:0] store_result_U0_m_axi_gmem_AWLOCK;
wire   [3:0] store_result_U0_m_axi_gmem_AWCACHE;
wire   [2:0] store_result_U0_m_axi_gmem_AWPROT;
wire   [3:0] store_result_U0_m_axi_gmem_AWQOS;
wire   [3:0] store_result_U0_m_axi_gmem_AWREGION;
wire   [0:0] store_result_U0_m_axi_gmem_AWUSER;
wire    store_result_U0_m_axi_gmem_WVALID;
wire   [31:0] store_result_U0_m_axi_gmem_WDATA;
wire   [3:0] store_result_U0_m_axi_gmem_WSTRB;
wire    store_result_U0_m_axi_gmem_WLAST;
wire   [0:0] store_result_U0_m_axi_gmem_WID;
wire   [0:0] store_result_U0_m_axi_gmem_WUSER;
wire    store_result_U0_m_axi_gmem_ARVALID;
wire   [63:0] store_result_U0_m_axi_gmem_ARADDR;
wire   [0:0] store_result_U0_m_axi_gmem_ARID;
wire   [31:0] store_result_U0_m_axi_gmem_ARLEN;
wire   [2:0] store_result_U0_m_axi_gmem_ARSIZE;
wire   [1:0] store_result_U0_m_axi_gmem_ARBURST;
wire   [1:0] store_result_U0_m_axi_gmem_ARLOCK;
wire   [3:0] store_result_U0_m_axi_gmem_ARCACHE;
wire   [2:0] store_result_U0_m_axi_gmem_ARPROT;
wire   [3:0] store_result_U0_m_axi_gmem_ARQOS;
wire   [3:0] store_result_U0_m_axi_gmem_ARREGION;
wire   [0:0] store_result_U0_m_axi_gmem_ARUSER;
wire    store_result_U0_m_axi_gmem_RREADY;
wire    store_result_U0_m_axi_gmem_BREADY;
wire    store_result_U0_compressed_data_read;
wire    store_result_U0_compressed_size_read;
wire    ap_sync_continue;
wire    gmem_load_loc_c_full_n;
wire   [31:0] gmem_load_loc_c_dout;
wire    gmem_load_loc_c_empty_n;
wire    in_c_full_n;
wire   [63:0] in_c_dout;
wire    in_c_empty_n;
wire    compressed_data_c_full_n;
wire   [63:0] compressed_data_c_dout;
wire    compressed_data_c_empty_n;
wire    compressed_size_c_full_n;
wire   [63:0] compressed_size_c_dout;
wire    compressed_size_c_empty_n;
wire    chunk_arr_stream_full_n;
wire   [7:0] chunk_arr_stream_dout;
wire    chunk_arr_stream_empty_n;
wire    gmem_load_loc_c11_full_n;
wire   [31:0] gmem_load_loc_c11_dout;
wire    gmem_load_loc_c11_empty_n;
wire    codeword_stream_full_n;
wire   [15:0] codeword_stream_dout;
wire    codeword_stream_empty_n;
wire    output_hw_stream_full_n;
wire   [7:0] output_hw_stream_dout;
wire    output_hw_stream_empty_n;
wire    compressed_size_stream_full_n;
wire   [31:0] compressed_size_stream_dout;
wire    compressed_size_stream_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_Block_split1_proc9_U0_ap_ready;
wire    ap_sync_Block_split1_proc9_U0_ap_ready;
reg    ap_sync_reg_load_input_U0_ap_ready;
wire    ap_sync_load_input_U0_ap_ready;
wire   [0:0] start_for_store_result_U0_din;
wire    start_for_store_result_U0_full_n;
wire   [0:0] start_for_store_result_U0_dout;
wire    start_for_store_result_U0_empty_n;
wire   [0:0] start_for_compress_stream_U0_din;
wire    start_for_compress_stream_U0_full_n;
wire   [0:0] start_for_compress_stream_U0_dout;
wire    start_for_compress_stream_U0_empty_n;
wire   [0:0] start_for_write_output_stream_U0_din;
wire    start_for_write_output_stream_U0_full_n;
wire   [0:0] start_for_write_output_stream_U0_dout;
wire    start_for_write_output_stream_U0_empty_n;
wire    write_output_stream_U0_start_full_n;
wire    write_output_stream_U0_start_write;
wire    store_result_U0_start_full_n;
wire    store_result_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_Block_split1_proc9_U0_ap_ready = 1'b0;
#0 ap_sync_reg_load_input_U0_ap_ready = 1'b0;
end

lzw_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .chunk_size(chunk_size),
    .compressed_data(compressed_data),
    .compressed_size(compressed_size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

lzw_aximm1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM1_CACHE_VALUE ))
aximm1_m_axi_U(
    .AWVALID(m_axi_aximm1_AWVALID),
    .AWREADY(m_axi_aximm1_AWREADY),
    .AWADDR(m_axi_aximm1_AWADDR),
    .AWID(m_axi_aximm1_AWID),
    .AWLEN(m_axi_aximm1_AWLEN),
    .AWSIZE(m_axi_aximm1_AWSIZE),
    .AWBURST(m_axi_aximm1_AWBURST),
    .AWLOCK(m_axi_aximm1_AWLOCK),
    .AWCACHE(m_axi_aximm1_AWCACHE),
    .AWPROT(m_axi_aximm1_AWPROT),
    .AWQOS(m_axi_aximm1_AWQOS),
    .AWREGION(m_axi_aximm1_AWREGION),
    .AWUSER(m_axi_aximm1_AWUSER),
    .WVALID(m_axi_aximm1_WVALID),
    .WREADY(m_axi_aximm1_WREADY),
    .WDATA(m_axi_aximm1_WDATA),
    .WSTRB(m_axi_aximm1_WSTRB),
    .WLAST(m_axi_aximm1_WLAST),
    .WID(m_axi_aximm1_WID),
    .WUSER(m_axi_aximm1_WUSER),
    .ARVALID(m_axi_aximm1_ARVALID),
    .ARREADY(m_axi_aximm1_ARREADY),
    .ARADDR(m_axi_aximm1_ARADDR),
    .ARID(m_axi_aximm1_ARID),
    .ARLEN(m_axi_aximm1_ARLEN),
    .ARSIZE(m_axi_aximm1_ARSIZE),
    .ARBURST(m_axi_aximm1_ARBURST),
    .ARLOCK(m_axi_aximm1_ARLOCK),
    .ARCACHE(m_axi_aximm1_ARCACHE),
    .ARPROT(m_axi_aximm1_ARPROT),
    .ARQOS(m_axi_aximm1_ARQOS),
    .ARREGION(m_axi_aximm1_ARREGION),
    .ARUSER(m_axi_aximm1_ARUSER),
    .RVALID(m_axi_aximm1_RVALID),
    .RREADY(m_axi_aximm1_RREADY),
    .RDATA(m_axi_aximm1_RDATA),
    .RLAST(m_axi_aximm1_RLAST),
    .RID(m_axi_aximm1_RID),
    .RUSER(m_axi_aximm1_RUSER),
    .RRESP(m_axi_aximm1_RRESP),
    .BVALID(m_axi_aximm1_BVALID),
    .BREADY(m_axi_aximm1_BREADY),
    .BRESP(m_axi_aximm1_BRESP),
    .BID(m_axi_aximm1_BID),
    .BUSER(m_axi_aximm1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(load_input_U0_m_axi_aximm1_ARVALID),
    .I_ARREADY(aximm1_ARREADY),
    .I_ARADDR(load_input_U0_m_axi_aximm1_ARADDR),
    .I_ARID(load_input_U0_m_axi_aximm1_ARID),
    .I_ARLEN(load_input_U0_m_axi_aximm1_ARLEN),
    .I_ARSIZE(load_input_U0_m_axi_aximm1_ARSIZE),
    .I_ARLOCK(load_input_U0_m_axi_aximm1_ARLOCK),
    .I_ARCACHE(load_input_U0_m_axi_aximm1_ARCACHE),
    .I_ARQOS(load_input_U0_m_axi_aximm1_ARQOS),
    .I_ARPROT(load_input_U0_m_axi_aximm1_ARPROT),
    .I_ARUSER(load_input_U0_m_axi_aximm1_ARUSER),
    .I_ARBURST(load_input_U0_m_axi_aximm1_ARBURST),
    .I_ARREGION(load_input_U0_m_axi_aximm1_ARREGION),
    .I_RVALID(aximm1_RVALID),
    .I_RREADY(load_input_U0_m_axi_aximm1_RREADY),
    .I_RDATA(aximm1_RDATA),
    .I_RID(aximm1_RID),
    .I_RUSER(aximm1_RUSER),
    .I_RRESP(aximm1_RRESP),
    .I_RLAST(aximm1_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(aximm1_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(aximm1_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(aximm1_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(aximm1_BRESP),
    .I_BID(aximm1_BID),
    .I_BUSER(aximm1_BUSER)
);

lzw_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Block_split1_proc9_U0_m_axi_gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(Block_split1_proc9_U0_m_axi_gmem_ARADDR),
    .I_ARID(Block_split1_proc9_U0_m_axi_gmem_ARID),
    .I_ARLEN(Block_split1_proc9_U0_m_axi_gmem_ARLEN),
    .I_ARSIZE(Block_split1_proc9_U0_m_axi_gmem_ARSIZE),
    .I_ARLOCK(Block_split1_proc9_U0_m_axi_gmem_ARLOCK),
    .I_ARCACHE(Block_split1_proc9_U0_m_axi_gmem_ARCACHE),
    .I_ARQOS(Block_split1_proc9_U0_m_axi_gmem_ARQOS),
    .I_ARPROT(Block_split1_proc9_U0_m_axi_gmem_ARPROT),
    .I_ARUSER(Block_split1_proc9_U0_m_axi_gmem_ARUSER),
    .I_ARBURST(Block_split1_proc9_U0_m_axi_gmem_ARBURST),
    .I_ARREGION(Block_split1_proc9_U0_m_axi_gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(Block_split1_proc9_U0_m_axi_gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(store_result_U0_m_axi_gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(store_result_U0_m_axi_gmem_AWADDR),
    .I_AWID(store_result_U0_m_axi_gmem_AWID),
    .I_AWLEN(store_result_U0_m_axi_gmem_AWLEN),
    .I_AWSIZE(store_result_U0_m_axi_gmem_AWSIZE),
    .I_AWLOCK(store_result_U0_m_axi_gmem_AWLOCK),
    .I_AWCACHE(store_result_U0_m_axi_gmem_AWCACHE),
    .I_AWQOS(store_result_U0_m_axi_gmem_AWQOS),
    .I_AWPROT(store_result_U0_m_axi_gmem_AWPROT),
    .I_AWUSER(store_result_U0_m_axi_gmem_AWUSER),
    .I_AWBURST(store_result_U0_m_axi_gmem_AWBURST),
    .I_AWREGION(store_result_U0_m_axi_gmem_AWREGION),
    .I_WVALID(store_result_U0_m_axi_gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(store_result_U0_m_axi_gmem_WDATA),
    .I_WID(store_result_U0_m_axi_gmem_WID),
    .I_WUSER(store_result_U0_m_axi_gmem_WUSER),
    .I_WLAST(store_result_U0_m_axi_gmem_WLAST),
    .I_WSTRB(store_result_U0_m_axi_gmem_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(store_result_U0_m_axi_gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

lzw_aximm2_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM2_CACHE_VALUE ))
aximm2_m_axi_U(
    .AWVALID(m_axi_aximm2_AWVALID),
    .AWREADY(m_axi_aximm2_AWREADY),
    .AWADDR(m_axi_aximm2_AWADDR),
    .AWID(m_axi_aximm2_AWID),
    .AWLEN(m_axi_aximm2_AWLEN),
    .AWSIZE(m_axi_aximm2_AWSIZE),
    .AWBURST(m_axi_aximm2_AWBURST),
    .AWLOCK(m_axi_aximm2_AWLOCK),
    .AWCACHE(m_axi_aximm2_AWCACHE),
    .AWPROT(m_axi_aximm2_AWPROT),
    .AWQOS(m_axi_aximm2_AWQOS),
    .AWREGION(m_axi_aximm2_AWREGION),
    .AWUSER(m_axi_aximm2_AWUSER),
    .WVALID(m_axi_aximm2_WVALID),
    .WREADY(m_axi_aximm2_WREADY),
    .WDATA(m_axi_aximm2_WDATA),
    .WSTRB(m_axi_aximm2_WSTRB),
    .WLAST(m_axi_aximm2_WLAST),
    .WID(m_axi_aximm2_WID),
    .WUSER(m_axi_aximm2_WUSER),
    .ARVALID(m_axi_aximm2_ARVALID),
    .ARREADY(m_axi_aximm2_ARREADY),
    .ARADDR(m_axi_aximm2_ARADDR),
    .ARID(m_axi_aximm2_ARID),
    .ARLEN(m_axi_aximm2_ARLEN),
    .ARSIZE(m_axi_aximm2_ARSIZE),
    .ARBURST(m_axi_aximm2_ARBURST),
    .ARLOCK(m_axi_aximm2_ARLOCK),
    .ARCACHE(m_axi_aximm2_ARCACHE),
    .ARPROT(m_axi_aximm2_ARPROT),
    .ARQOS(m_axi_aximm2_ARQOS),
    .ARREGION(m_axi_aximm2_ARREGION),
    .ARUSER(m_axi_aximm2_ARUSER),
    .RVALID(m_axi_aximm2_RVALID),
    .RREADY(m_axi_aximm2_RREADY),
    .RDATA(m_axi_aximm2_RDATA),
    .RLAST(m_axi_aximm2_RLAST),
    .RID(m_axi_aximm2_RID),
    .RUSER(m_axi_aximm2_RUSER),
    .RRESP(m_axi_aximm2_RRESP),
    .BVALID(m_axi_aximm2_BVALID),
    .BREADY(m_axi_aximm2_BREADY),
    .BRESP(m_axi_aximm2_BRESP),
    .BID(m_axi_aximm2_BID),
    .BUSER(m_axi_aximm2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(aximm2_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(aximm2_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(aximm2_RDATA),
    .I_RID(aximm2_RID),
    .I_RUSER(aximm2_RUSER),
    .I_RRESP(aximm2_RRESP),
    .I_RLAST(aximm2_RLAST),
    .I_AWVALID(store_result_U0_m_axi_aximm2_AWVALID),
    .I_AWREADY(aximm2_AWREADY),
    .I_AWADDR(store_result_U0_m_axi_aximm2_AWADDR),
    .I_AWID(store_result_U0_m_axi_aximm2_AWID),
    .I_AWLEN(store_result_U0_m_axi_aximm2_AWLEN),
    .I_AWSIZE(store_result_U0_m_axi_aximm2_AWSIZE),
    .I_AWLOCK(store_result_U0_m_axi_aximm2_AWLOCK),
    .I_AWCACHE(store_result_U0_m_axi_aximm2_AWCACHE),
    .I_AWQOS(store_result_U0_m_axi_aximm2_AWQOS),
    .I_AWPROT(store_result_U0_m_axi_aximm2_AWPROT),
    .I_AWUSER(store_result_U0_m_axi_aximm2_AWUSER),
    .I_AWBURST(store_result_U0_m_axi_aximm2_AWBURST),
    .I_AWREGION(store_result_U0_m_axi_aximm2_AWREGION),
    .I_WVALID(store_result_U0_m_axi_aximm2_WVALID),
    .I_WREADY(aximm2_WREADY),
    .I_WDATA(store_result_U0_m_axi_aximm2_WDATA),
    .I_WID(store_result_U0_m_axi_aximm2_WID),
    .I_WUSER(store_result_U0_m_axi_aximm2_WUSER),
    .I_WLAST(store_result_U0_m_axi_aximm2_WLAST),
    .I_WSTRB(store_result_U0_m_axi_aximm2_WSTRB),
    .I_BVALID(aximm2_BVALID),
    .I_BREADY(store_result_U0_m_axi_aximm2_BREADY),
    .I_BRESP(aximm2_BRESP),
    .I_BID(aximm2_BID),
    .I_BUSER(aximm2_BUSER)
);

lzw_Block_split1_proc9 Block_split1_proc9_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_split1_proc9_U0_ap_start),
    .start_full_n(start_for_store_result_U0_full_n),
    .ap_done(Block_split1_proc9_U0_ap_done),
    .ap_continue(Block_split1_proc9_U0_ap_continue),
    .ap_idle(Block_split1_proc9_U0_ap_idle),
    .ap_ready(Block_split1_proc9_U0_ap_ready),
    .start_out(Block_split1_proc9_U0_start_out),
    .start_write(Block_split1_proc9_U0_start_write),
    .chunk_size(chunk_size),
    .m_axi_gmem_AWVALID(Block_split1_proc9_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(Block_split1_proc9_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(Block_split1_proc9_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(Block_split1_proc9_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(Block_split1_proc9_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(Block_split1_proc9_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(Block_split1_proc9_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(Block_split1_proc9_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(Block_split1_proc9_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(Block_split1_proc9_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(Block_split1_proc9_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(Block_split1_proc9_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(Block_split1_proc9_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(Block_split1_proc9_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(Block_split1_proc9_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(Block_split1_proc9_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(Block_split1_proc9_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(Block_split1_proc9_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(Block_split1_proc9_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(Block_split1_proc9_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(Block_split1_proc9_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(Block_split1_proc9_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(Block_split1_proc9_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(Block_split1_proc9_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(Block_split1_proc9_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(Block_split1_proc9_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(Block_split1_proc9_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(Block_split1_proc9_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(Block_split1_proc9_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(Block_split1_proc9_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(Block_split1_proc9_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(Block_split1_proc9_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .in_r(in_r),
    .compressed_data(compressed_data),
    .compressed_size(compressed_size),
    .gmem_load_out_out_din(Block_split1_proc9_U0_gmem_load_out_out_din),
    .gmem_load_out_out_full_n(gmem_load_loc_c_full_n),
    .gmem_load_out_out_write(Block_split1_proc9_U0_gmem_load_out_out_write),
    .in_out_din(Block_split1_proc9_U0_in_out_din),
    .in_out_full_n(in_c_full_n),
    .in_out_write(Block_split1_proc9_U0_in_out_write),
    .compressed_data_out_din(Block_split1_proc9_U0_compressed_data_out_din),
    .compressed_data_out_full_n(compressed_data_c_full_n),
    .compressed_data_out_write(Block_split1_proc9_U0_compressed_data_out_write),
    .compressed_size_out_din(Block_split1_proc9_U0_compressed_size_out_din),
    .compressed_size_out_full_n(compressed_size_c_full_n),
    .compressed_size_out_write(Block_split1_proc9_U0_compressed_size_out_write)
);

lzw_load_input load_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(load_input_U0_ap_start),
    .start_full_n(start_for_compress_stream_U0_full_n),
    .ap_done(load_input_U0_ap_done),
    .ap_continue(load_input_U0_ap_continue),
    .ap_idle(load_input_U0_ap_idle),
    .ap_ready(load_input_U0_ap_ready),
    .start_out(load_input_U0_start_out),
    .start_write(load_input_U0_start_write),
    .m_axi_aximm1_AWVALID(load_input_U0_m_axi_aximm1_AWVALID),
    .m_axi_aximm1_AWREADY(1'b0),
    .m_axi_aximm1_AWADDR(load_input_U0_m_axi_aximm1_AWADDR),
    .m_axi_aximm1_AWID(load_input_U0_m_axi_aximm1_AWID),
    .m_axi_aximm1_AWLEN(load_input_U0_m_axi_aximm1_AWLEN),
    .m_axi_aximm1_AWSIZE(load_input_U0_m_axi_aximm1_AWSIZE),
    .m_axi_aximm1_AWBURST(load_input_U0_m_axi_aximm1_AWBURST),
    .m_axi_aximm1_AWLOCK(load_input_U0_m_axi_aximm1_AWLOCK),
    .m_axi_aximm1_AWCACHE(load_input_U0_m_axi_aximm1_AWCACHE),
    .m_axi_aximm1_AWPROT(load_input_U0_m_axi_aximm1_AWPROT),
    .m_axi_aximm1_AWQOS(load_input_U0_m_axi_aximm1_AWQOS),
    .m_axi_aximm1_AWREGION(load_input_U0_m_axi_aximm1_AWREGION),
    .m_axi_aximm1_AWUSER(load_input_U0_m_axi_aximm1_AWUSER),
    .m_axi_aximm1_WVALID(load_input_U0_m_axi_aximm1_WVALID),
    .m_axi_aximm1_WREADY(1'b0),
    .m_axi_aximm1_WDATA(load_input_U0_m_axi_aximm1_WDATA),
    .m_axi_aximm1_WSTRB(load_input_U0_m_axi_aximm1_WSTRB),
    .m_axi_aximm1_WLAST(load_input_U0_m_axi_aximm1_WLAST),
    .m_axi_aximm1_WID(load_input_U0_m_axi_aximm1_WID),
    .m_axi_aximm1_WUSER(load_input_U0_m_axi_aximm1_WUSER),
    .m_axi_aximm1_ARVALID(load_input_U0_m_axi_aximm1_ARVALID),
    .m_axi_aximm1_ARREADY(aximm1_ARREADY),
    .m_axi_aximm1_ARADDR(load_input_U0_m_axi_aximm1_ARADDR),
    .m_axi_aximm1_ARID(load_input_U0_m_axi_aximm1_ARID),
    .m_axi_aximm1_ARLEN(load_input_U0_m_axi_aximm1_ARLEN),
    .m_axi_aximm1_ARSIZE(load_input_U0_m_axi_aximm1_ARSIZE),
    .m_axi_aximm1_ARBURST(load_input_U0_m_axi_aximm1_ARBURST),
    .m_axi_aximm1_ARLOCK(load_input_U0_m_axi_aximm1_ARLOCK),
    .m_axi_aximm1_ARCACHE(load_input_U0_m_axi_aximm1_ARCACHE),
    .m_axi_aximm1_ARPROT(load_input_U0_m_axi_aximm1_ARPROT),
    .m_axi_aximm1_ARQOS(load_input_U0_m_axi_aximm1_ARQOS),
    .m_axi_aximm1_ARREGION(load_input_U0_m_axi_aximm1_ARREGION),
    .m_axi_aximm1_ARUSER(load_input_U0_m_axi_aximm1_ARUSER),
    .m_axi_aximm1_RVALID(aximm1_RVALID),
    .m_axi_aximm1_RREADY(load_input_U0_m_axi_aximm1_RREADY),
    .m_axi_aximm1_RDATA(aximm1_RDATA),
    .m_axi_aximm1_RLAST(aximm1_RLAST),
    .m_axi_aximm1_RID(aximm1_RID),
    .m_axi_aximm1_RUSER(aximm1_RUSER),
    .m_axi_aximm1_RRESP(aximm1_RRESP),
    .m_axi_aximm1_BVALID(1'b0),
    .m_axi_aximm1_BREADY(load_input_U0_m_axi_aximm1_BREADY),
    .m_axi_aximm1_BRESP(2'd0),
    .m_axi_aximm1_BID(1'd0),
    .m_axi_aximm1_BUSER(1'd0),
    .inStream_din(load_input_U0_inStream_din),
    .inStream_full_n(chunk_arr_stream_full_n),
    .inStream_write(load_input_U0_inStream_write),
    .in_r_dout(in_c_dout),
    .in_r_empty_n(in_c_empty_n),
    .in_r_read(load_input_U0_in_r_read),
    .gmem_load_loc_dout(gmem_load_loc_c_dout),
    .gmem_load_loc_empty_n(gmem_load_loc_c_empty_n),
    .gmem_load_loc_read(load_input_U0_gmem_load_loc_read),
    .gmem_load_loc_out_din(load_input_U0_gmem_load_loc_out_din),
    .gmem_load_loc_out_full_n(gmem_load_loc_c11_full_n),
    .gmem_load_loc_out_write(load_input_U0_gmem_load_loc_out_write)
);

lzw_compress_stream compress_stream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compress_stream_U0_ap_start),
    .start_full_n(start_for_write_output_stream_U0_full_n),
    .ap_done(compress_stream_U0_ap_done),
    .ap_continue(compress_stream_U0_ap_continue),
    .ap_idle(compress_stream_U0_ap_idle),
    .ap_ready(compress_stream_U0_ap_ready),
    .start_out(compress_stream_U0_start_out),
    .start_write(compress_stream_U0_start_write),
    .chunk_arr_stream_dout(chunk_arr_stream_dout),
    .chunk_arr_stream_empty_n(chunk_arr_stream_empty_n),
    .chunk_arr_stream_read(compress_stream_U0_chunk_arr_stream_read),
    .codeword_stream_din(compress_stream_U0_codeword_stream_din),
    .codeword_stream_full_n(codeword_stream_full_n),
    .codeword_stream_write(compress_stream_U0_codeword_stream_write),
    .gmem_load_loc_dout(gmem_load_loc_c11_dout),
    .gmem_load_loc_empty_n(gmem_load_loc_c11_empty_n),
    .gmem_load_loc_read(compress_stream_U0_gmem_load_loc_read)
);

lzw_write_output_stream write_output_stream_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_output_stream_U0_ap_start),
    .ap_done(write_output_stream_U0_ap_done),
    .ap_continue(write_output_stream_U0_ap_continue),
    .ap_idle(write_output_stream_U0_ap_idle),
    .ap_ready(write_output_stream_U0_ap_ready),
    .codeword_stream_dout(codeword_stream_dout),
    .codeword_stream_empty_n(codeword_stream_empty_n),
    .codeword_stream_read(write_output_stream_U0_codeword_stream_read),
    .output_hw_stream_din(write_output_stream_U0_output_hw_stream_din),
    .output_hw_stream_full_n(output_hw_stream_full_n),
    .output_hw_stream_write(write_output_stream_U0_output_hw_stream_write),
    .compressed_size_stream_din(write_output_stream_U0_compressed_size_stream_din),
    .compressed_size_stream_full_n(compressed_size_stream_full_n),
    .compressed_size_stream_write(write_output_stream_U0_compressed_size_stream_write)
);

lzw_store_result store_result_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(store_result_U0_ap_start),
    .ap_done(store_result_U0_ap_done),
    .ap_continue(store_result_U0_ap_continue),
    .ap_idle(store_result_U0_ap_idle),
    .ap_ready(store_result_U0_ap_ready),
    .compressed_size_stream_dout(compressed_size_stream_dout),
    .compressed_size_stream_empty_n(compressed_size_stream_empty_n),
    .compressed_size_stream_read(store_result_U0_compressed_size_stream_read),
    .output_hw_stream_dout(output_hw_stream_dout),
    .output_hw_stream_empty_n(output_hw_stream_empty_n),
    .output_hw_stream_read(store_result_U0_output_hw_stream_read),
    .m_axi_aximm2_AWVALID(store_result_U0_m_axi_aximm2_AWVALID),
    .m_axi_aximm2_AWREADY(aximm2_AWREADY),
    .m_axi_aximm2_AWADDR(store_result_U0_m_axi_aximm2_AWADDR),
    .m_axi_aximm2_AWID(store_result_U0_m_axi_aximm2_AWID),
    .m_axi_aximm2_AWLEN(store_result_U0_m_axi_aximm2_AWLEN),
    .m_axi_aximm2_AWSIZE(store_result_U0_m_axi_aximm2_AWSIZE),
    .m_axi_aximm2_AWBURST(store_result_U0_m_axi_aximm2_AWBURST),
    .m_axi_aximm2_AWLOCK(store_result_U0_m_axi_aximm2_AWLOCK),
    .m_axi_aximm2_AWCACHE(store_result_U0_m_axi_aximm2_AWCACHE),
    .m_axi_aximm2_AWPROT(store_result_U0_m_axi_aximm2_AWPROT),
    .m_axi_aximm2_AWQOS(store_result_U0_m_axi_aximm2_AWQOS),
    .m_axi_aximm2_AWREGION(store_result_U0_m_axi_aximm2_AWREGION),
    .m_axi_aximm2_AWUSER(store_result_U0_m_axi_aximm2_AWUSER),
    .m_axi_aximm2_WVALID(store_result_U0_m_axi_aximm2_WVALID),
    .m_axi_aximm2_WREADY(aximm2_WREADY),
    .m_axi_aximm2_WDATA(store_result_U0_m_axi_aximm2_WDATA),
    .m_axi_aximm2_WSTRB(store_result_U0_m_axi_aximm2_WSTRB),
    .m_axi_aximm2_WLAST(store_result_U0_m_axi_aximm2_WLAST),
    .m_axi_aximm2_WID(store_result_U0_m_axi_aximm2_WID),
    .m_axi_aximm2_WUSER(store_result_U0_m_axi_aximm2_WUSER),
    .m_axi_aximm2_ARVALID(store_result_U0_m_axi_aximm2_ARVALID),
    .m_axi_aximm2_ARREADY(1'b0),
    .m_axi_aximm2_ARADDR(store_result_U0_m_axi_aximm2_ARADDR),
    .m_axi_aximm2_ARID(store_result_U0_m_axi_aximm2_ARID),
    .m_axi_aximm2_ARLEN(store_result_U0_m_axi_aximm2_ARLEN),
    .m_axi_aximm2_ARSIZE(store_result_U0_m_axi_aximm2_ARSIZE),
    .m_axi_aximm2_ARBURST(store_result_U0_m_axi_aximm2_ARBURST),
    .m_axi_aximm2_ARLOCK(store_result_U0_m_axi_aximm2_ARLOCK),
    .m_axi_aximm2_ARCACHE(store_result_U0_m_axi_aximm2_ARCACHE),
    .m_axi_aximm2_ARPROT(store_result_U0_m_axi_aximm2_ARPROT),
    .m_axi_aximm2_ARQOS(store_result_U0_m_axi_aximm2_ARQOS),
    .m_axi_aximm2_ARREGION(store_result_U0_m_axi_aximm2_ARREGION),
    .m_axi_aximm2_ARUSER(store_result_U0_m_axi_aximm2_ARUSER),
    .m_axi_aximm2_RVALID(1'b0),
    .m_axi_aximm2_RREADY(store_result_U0_m_axi_aximm2_RREADY),
    .m_axi_aximm2_RDATA(8'd0),
    .m_axi_aximm2_RLAST(1'b0),
    .m_axi_aximm2_RID(1'd0),
    .m_axi_aximm2_RUSER(1'd0),
    .m_axi_aximm2_RRESP(2'd0),
    .m_axi_aximm2_BVALID(aximm2_BVALID),
    .m_axi_aximm2_BREADY(store_result_U0_m_axi_aximm2_BREADY),
    .m_axi_aximm2_BRESP(aximm2_BRESP),
    .m_axi_aximm2_BID(aximm2_BID),
    .m_axi_aximm2_BUSER(aximm2_BUSER),
    .m_axi_gmem_AWVALID(store_result_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(gmem_AWREADY),
    .m_axi_gmem_AWADDR(store_result_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(store_result_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(store_result_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(store_result_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(store_result_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(store_result_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(store_result_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(store_result_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(store_result_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(store_result_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(store_result_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(store_result_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(gmem_WREADY),
    .m_axi_gmem_WDATA(store_result_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(store_result_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(store_result_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(store_result_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(store_result_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(store_result_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(1'b0),
    .m_axi_gmem_ARADDR(store_result_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(store_result_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(store_result_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(store_result_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(store_result_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(store_result_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(store_result_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(store_result_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(store_result_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(store_result_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(store_result_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(1'b0),
    .m_axi_gmem_RREADY(store_result_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(32'd0),
    .m_axi_gmem_RLAST(1'b0),
    .m_axi_gmem_RID(1'd0),
    .m_axi_gmem_RUSER(1'd0),
    .m_axi_gmem_RRESP(2'd0),
    .m_axi_gmem_BVALID(gmem_BVALID),
    .m_axi_gmem_BREADY(store_result_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(gmem_BRESP),
    .m_axi_gmem_BID(gmem_BID),
    .m_axi_gmem_BUSER(gmem_BUSER),
    .compressed_data_dout(compressed_data_c_dout),
    .compressed_data_empty_n(compressed_data_c_empty_n),
    .compressed_data_read(store_result_U0_compressed_data_read),
    .compressed_size_dout(compressed_size_c_dout),
    .compressed_size_empty_n(compressed_size_c_empty_n),
    .compressed_size_read(store_result_U0_compressed_size_read)
);

lzw_fifo_w32_d2_S gmem_load_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc9_U0_gmem_load_out_out_din),
    .if_full_n(gmem_load_loc_c_full_n),
    .if_write(Block_split1_proc9_U0_gmem_load_out_out_write),
    .if_dout(gmem_load_loc_c_dout),
    .if_empty_n(gmem_load_loc_c_empty_n),
    .if_read(load_input_U0_gmem_load_loc_read)
);

lzw_fifo_w64_d2_S in_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc9_U0_in_out_din),
    .if_full_n(in_c_full_n),
    .if_write(Block_split1_proc9_U0_in_out_write),
    .if_dout(in_c_dout),
    .if_empty_n(in_c_empty_n),
    .if_read(load_input_U0_in_r_read)
);

lzw_fifo_w64_d5_S compressed_data_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc9_U0_compressed_data_out_din),
    .if_full_n(compressed_data_c_full_n),
    .if_write(Block_split1_proc9_U0_compressed_data_out_write),
    .if_dout(compressed_data_c_dout),
    .if_empty_n(compressed_data_c_empty_n),
    .if_read(store_result_U0_compressed_data_read)
);

lzw_fifo_w64_d5_S compressed_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_split1_proc9_U0_compressed_size_out_din),
    .if_full_n(compressed_size_c_full_n),
    .if_write(Block_split1_proc9_U0_compressed_size_out_write),
    .if_dout(compressed_size_c_dout),
    .if_empty_n(compressed_size_c_empty_n),
    .if_read(store_result_U0_compressed_size_read)
);

lzw_fifo_w8_d1024_A chunk_arr_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_input_U0_inStream_din),
    .if_full_n(chunk_arr_stream_full_n),
    .if_write(load_input_U0_inStream_write),
    .if_dout(chunk_arr_stream_dout),
    .if_empty_n(chunk_arr_stream_empty_n),
    .if_read(compress_stream_U0_chunk_arr_stream_read)
);

lzw_fifo_w32_d2_S gmem_load_loc_c11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(load_input_U0_gmem_load_loc_out_din),
    .if_full_n(gmem_load_loc_c11_full_n),
    .if_write(load_input_U0_gmem_load_loc_out_write),
    .if_dout(gmem_load_loc_c11_dout),
    .if_empty_n(gmem_load_loc_c11_empty_n),
    .if_read(compress_stream_U0_gmem_load_loc_read)
);

lzw_fifo_w16_d1024_A codeword_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compress_stream_U0_codeword_stream_din),
    .if_full_n(codeword_stream_full_n),
    .if_write(compress_stream_U0_codeword_stream_write),
    .if_dout(codeword_stream_dout),
    .if_empty_n(codeword_stream_empty_n),
    .if_read(write_output_stream_U0_codeword_stream_read)
);

lzw_fifo_w8_d1024_A output_hw_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(write_output_stream_U0_output_hw_stream_din),
    .if_full_n(output_hw_stream_full_n),
    .if_write(write_output_stream_U0_output_hw_stream_write),
    .if_dout(output_hw_stream_dout),
    .if_empty_n(output_hw_stream_empty_n),
    .if_read(store_result_U0_output_hw_stream_read)
);

lzw_fifo_w32_d1024_A compressed_size_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(write_output_stream_U0_compressed_size_stream_din),
    .if_full_n(compressed_size_stream_full_n),
    .if_write(write_output_stream_U0_compressed_size_stream_write),
    .if_dout(compressed_size_stream_dout),
    .if_empty_n(compressed_size_stream_empty_n),
    .if_read(store_result_U0_compressed_size_stream_read)
);

lzw_start_for_store_result_U0 start_for_store_result_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_store_result_U0_din),
    .if_full_n(start_for_store_result_U0_full_n),
    .if_write(Block_split1_proc9_U0_start_write),
    .if_dout(start_for_store_result_U0_dout),
    .if_empty_n(start_for_store_result_U0_empty_n),
    .if_read(store_result_U0_ap_ready)
);

lzw_start_for_compress_stream_U0 start_for_compress_stream_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compress_stream_U0_din),
    .if_full_n(start_for_compress_stream_U0_full_n),
    .if_write(load_input_U0_start_write),
    .if_dout(start_for_compress_stream_U0_dout),
    .if_empty_n(start_for_compress_stream_U0_empty_n),
    .if_read(compress_stream_U0_ap_ready)
);

lzw_start_for_write_output_stream_U0 start_for_write_output_stream_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_write_output_stream_U0_din),
    .if_full_n(start_for_write_output_stream_U0_full_n),
    .if_write(compress_stream_U0_start_write),
    .if_dout(start_for_write_output_stream_U0_dout),
    .if_empty_n(start_for_write_output_stream_U0_empty_n),
    .if_read(write_output_stream_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_split1_proc9_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_split1_proc9_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_split1_proc9_U0_ap_ready <= ap_sync_Block_split1_proc9_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_load_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_load_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_load_input_U0_ap_ready <= ap_sync_load_input_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

assign Block_split1_proc9_U0_ap_continue = 1'b1;

assign Block_split1_proc9_U0_ap_start = ((ap_sync_reg_Block_split1_proc9_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_done = store_result_U0_ap_done;

assign ap_idle = (write_output_stream_U0_ap_idle & store_result_U0_ap_idle & load_input_U0_ap_idle & compress_stream_U0_ap_idle & Block_split1_proc9_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_Block_split1_proc9_U0_ap_ready = (ap_sync_reg_Block_split1_proc9_U0_ap_ready | Block_split1_proc9_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = store_result_U0_ap_done;

assign ap_sync_load_input_U0_ap_ready = (load_input_U0_ap_ready | ap_sync_reg_load_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_load_input_U0_ap_ready & ap_sync_Block_split1_proc9_U0_ap_ready);

assign compress_stream_U0_ap_continue = 1'b1;

assign compress_stream_U0_ap_start = start_for_compress_stream_U0_empty_n;

assign load_input_U0_ap_continue = 1'b1;

assign load_input_U0_ap_start = ((ap_sync_reg_load_input_U0_ap_ready ^ 1'b1) & ap_start);

assign start_for_compress_stream_U0_din = 1'b1;

assign start_for_store_result_U0_din = 1'b1;

assign start_for_write_output_stream_U0_din = 1'b1;

assign store_result_U0_ap_continue = ap_continue;

assign store_result_U0_ap_start = start_for_store_result_U0_empty_n;

assign store_result_U0_start_full_n = 1'b1;

assign store_result_U0_start_write = 1'b0;

assign write_output_stream_U0_ap_continue = 1'b1;

assign write_output_stream_U0_ap_start = start_for_write_output_stream_U0_empty_n;

assign write_output_stream_U0_start_full_n = 1'b1;

assign write_output_stream_U0_start_write = 1'b0;


// synthesis translate_off
`include "lzw_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //lzw

