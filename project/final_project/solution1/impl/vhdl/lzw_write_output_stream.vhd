-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lzw_write_output_stream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    codeword_stream_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    codeword_stream_empty_n : IN STD_LOGIC;
    codeword_stream_read : OUT STD_LOGIC;
    output_hw_stream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_hw_stream_full_n : IN STD_LOGIC;
    output_hw_stream_write : OUT STD_LOGIC;
    compressed_size_stream_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    compressed_size_stream_full_n : IN STD_LOGIC;
    compressed_size_stream_write : OUT STD_LOGIC );
end;


architecture behav of lzw_write_output_stream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_FFFFFFF8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal codeword_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_nbreadreq_fu_70_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_hw_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln214_1_reg_369 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln222_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal compressed_size_stream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal bit_count_2_reg_109 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_buffer_1_fu_148_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_buffer_1_reg_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_160_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln_reg_347 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_predicate_op40_write_state2 : BOOLEAN;
    signal ap_block_state2 : BOOLEAN;
    signal bit_count_1_fu_168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln214_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_357 : STD_LOGIC_VECTOR (0 downto 0);
    signal size_3_fu_222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln214_1_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bit_count_3_fu_244_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_count_3_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal bit_buffer_reg_98 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_phi_mux_bit_count_2_phi_fu_112_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal size_4_reg_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal bit_count_fu_62 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln214_fu_289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal size_fu_66 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln214_2_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal byte_fu_217_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal byte_1_fu_254_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal code_1_fu_144_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln204_fu_156_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_174_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln206_fu_195_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln223_fu_205_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln223_fu_211_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_228_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal lshr_ln215_fu_250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln214_fu_259_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln214_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1_fu_275_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal add_ln214_1_fu_269_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln214_1_fu_285_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln214_3_fu_293_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln214_2_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_273 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((compressed_size_stream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bit_buffer_reg_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                bit_buffer_reg_98 <= trunc_ln_reg_347;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bit_buffer_reg_98 <= ap_const_lv19_0;
            end if; 
        end if;
    end process;

    bit_count_2_reg_109_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_1))) then 
                bit_count_2_reg_109 <= bit_count_1_fu_168_p2;
            elsif (((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                bit_count_2_reg_109 <= bit_count_3_reg_373;
            end if; 
        end if;
    end process;

    bit_count_fu_62_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bit_count_fu_62 <= ap_const_lv32_0;
            elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_0))) then 
                bit_count_fu_62 <= bit_count_1_fu_168_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln214_reg_357 = ap_const_lv1_1))) then 
                bit_count_fu_62 <= zext_ln214_fu_289_p1;
            end if; 
        end if;
    end process;

    size_4_reg_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_273)) then
                if ((icmp_ln222_fu_199_p2 = ap_const_lv1_0)) then 
                    size_4_reg_118 <= size_fu_66;
                elsif ((icmp_ln222_fu_199_p2 = ap_const_lv1_1)) then 
                    size_4_reg_118 <= size_3_fu_222_p2;
                end if;
            end if; 
        end if;
    end process;

    size_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                size_fu_66 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln214_reg_357 = ap_const_lv1_1))) then 
                size_fu_66 <= add_ln214_2_fu_303_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                bit_buffer_1_reg_342 <= bit_buffer_1_fu_148_p3;
                icmp_ln214_reg_357 <= icmp_ln214_fu_184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln214_1_fu_238_p2 = ap_const_lv1_1))) then
                bit_count_3_reg_373 <= bit_count_3_fu_244_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln214_1_reg_369 <= icmp_ln214_1_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln_reg_347 <= trunc_ln_fu_160_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, codeword_stream_empty_n, output_hw_stream_full_n, compressed_size_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_CS_fsm_state6, ap_predicate_op40_write_state2, icmp_ln214_fu_184_p2, icmp_ln214_1_fu_238_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln214_fu_184_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln214_1_fu_238_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln214_1_fu_238_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state6 => 
                if (((compressed_size_stream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln214_1_fu_269_p2 <= std_logic_vector(unsigned(trunc_ln214_fu_259_p1) + unsigned(ap_const_lv3_5));
    add_ln214_2_fu_303_p2 <= std_logic_vector(unsigned(zext_ln214_2_fu_299_p1) + unsigned(size_fu_66));
    add_ln214_3_fu_293_p2 <= std_logic_vector(unsigned(zext_ln214_1_fu_285_p1) + unsigned(ap_const_lv30_1));
    add_ln214_fu_263_p2 <= std_logic_vector(unsigned(bit_count_fu_62) + unsigned(ap_const_lv32_5));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(output_hw_stream_full_n, ap_enable_reg_pp0_iter1, icmp_ln214_1_reg_369)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (output_hw_stream_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(output_hw_stream_full_n, ap_enable_reg_pp0_iter1, icmp_ln214_1_reg_369)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (output_hw_stream_full_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(output_hw_stream_full_n, ap_enable_reg_pp0_iter1, icmp_ln214_1_reg_369)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (output_hw_stream_full_n = ap_const_logic_0));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_assign_proc : process(codeword_stream_empty_n, output_hw_stream_full_n, tmp_nbreadreq_fu_70_p3, ap_predicate_op40_write_state2)
    begin
                ap_block_state2 <= (((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(output_hw_stream_full_n, icmp_ln214_1_reg_369)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (output_hw_stream_full_n = ap_const_logic_0));
    end process;


    ap_condition_273_assign_proc : process(codeword_stream_empty_n, output_hw_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_predicate_op40_write_state2)
    begin
                ap_condition_273 <= (not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln214_1_fu_238_p2)
    begin
        if ((icmp_ln214_1_fu_238_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, compressed_size_stream_full_n, ap_CS_fsm_state6)
    begin
        if (((compressed_size_stream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bit_count_2_phi_fu_112_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln214_1_reg_369, bit_count_2_reg_109, bit_count_3_reg_373)
    begin
        if (((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_bit_count_2_phi_fu_112_p4 <= bit_count_3_reg_373;
        else 
            ap_phi_mux_bit_count_2_phi_fu_112_p4 <= bit_count_2_reg_109;
        end if; 
    end process;


    ap_predicate_op40_write_state2_assign_proc : process(tmp_nbreadreq_fu_70_p3, icmp_ln222_fu_199_p2)
    begin
                ap_predicate_op40_write_state2 <= ((icmp_ln222_fu_199_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(compressed_size_stream_full_n, ap_CS_fsm_state6)
    begin
        if (((compressed_size_stream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bit_buffer_1_fu_148_p3 <= (bit_buffer_reg_98 & code_1_fu_144_p1);
    bit_count_1_fu_168_p2 <= std_logic_vector(unsigned(bit_count_fu_62) + unsigned(ap_const_lv32_D));
    bit_count_3_fu_244_p2 <= std_logic_vector(unsigned(ap_phi_mux_bit_count_2_phi_fu_112_p4) + unsigned(ap_const_lv32_FFFFFFF8));
    byte_1_fu_254_p1 <= lshr_ln215_fu_250_p2(8 - 1 downto 0);
    byte_fu_217_p1 <= shl_ln223_fu_211_p2(8 - 1 downto 0);
    code_1_fu_144_p1 <= codeword_stream_dout(13 - 1 downto 0);

    codeword_stream_blk_n_assign_proc : process(codeword_stream_empty_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3)
    begin
        if (((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            codeword_stream_blk_n <= codeword_stream_empty_n;
        else 
            codeword_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    codeword_stream_read_assign_proc : process(codeword_stream_empty_n, output_hw_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_predicate_op40_write_state2)
    begin
        if ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            codeword_stream_read <= ap_const_logic_1;
        else 
            codeword_stream_read <= ap_const_logic_0;
        end if; 
    end process;


    compressed_size_stream_blk_n_assign_proc : process(compressed_size_stream_full_n, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            compressed_size_stream_blk_n <= compressed_size_stream_full_n;
        else 
            compressed_size_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    compressed_size_stream_din <= size_4_reg_118;

    compressed_size_stream_write_assign_proc : process(compressed_size_stream_full_n, ap_CS_fsm_state6)
    begin
        if (((compressed_size_stream_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            compressed_size_stream_write <= ap_const_logic_1;
        else 
            compressed_size_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln214_1_fu_238_p2 <= "1" when (signed(tmp_2_fu_228_p4) > signed(ap_const_lv29_0)) else "0";
    icmp_ln214_fu_184_p2 <= "1" when (signed(tmp_1_fu_174_p4) > signed(ap_const_lv29_0)) else "0";
    icmp_ln222_fu_199_p2 <= "1" when (signed(bit_count_fu_62) > signed(ap_const_lv32_0)) else "0";
    lshr_ln215_fu_250_p2 <= std_logic_vector(shift_right(unsigned(bit_buffer_1_reg_342),to_integer(unsigned('0' & bit_count_3_reg_373(31-1 downto 0)))));

    output_hw_stream_blk_n_assign_proc : process(output_hw_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln214_1_reg_369, icmp_ln222_fu_199_p2)
    begin
        if ((((icmp_ln222_fu_199_p2 = ap_const_lv1_1) and (tmp_nbreadreq_fu_70_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output_hw_stream_blk_n <= output_hw_stream_full_n;
        else 
            output_hw_stream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    output_hw_stream_din_assign_proc : process(codeword_stream_empty_n, output_hw_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln214_1_reg_369, ap_predicate_op40_write_state2, byte_fu_217_p1, byte_1_fu_254_p1, ap_block_pp0_stage0_01001)
    begin
        if (((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            output_hw_stream_din <= byte_1_fu_254_p1;
        elsif ((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (ap_predicate_op40_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            output_hw_stream_din <= byte_fu_217_p1;
        else 
            output_hw_stream_din <= "XXXXXXXX";
        end if; 
    end process;


    output_hw_stream_write_assign_proc : process(codeword_stream_empty_n, output_hw_stream_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_70_p3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln214_1_reg_369, ap_predicate_op40_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((not((((ap_predicate_op40_write_state2 = ap_const_boolean_1) and (output_hw_stream_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_70_p3 = ap_const_lv1_1) and (codeword_stream_empty_n = ap_const_logic_0)))) and (ap_predicate_op40_write_state2 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((icmp_ln214_1_reg_369 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            output_hw_stream_write <= ap_const_logic_1;
        else 
            output_hw_stream_write <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln223_fu_211_p2 <= std_logic_vector(shift_left(unsigned(zext_ln206_fu_195_p1),to_integer(unsigned('0' & sub_ln223_fu_205_p2(31-1 downto 0)))));
    size_3_fu_222_p2 <= std_logic_vector(unsigned(size_fu_66) + unsigned(ap_const_lv32_1));
    sub_ln223_fu_205_p2 <= std_logic_vector(unsigned(ap_const_lv32_8) - unsigned(bit_count_fu_62));
    tmp_1_fu_174_p4 <= bit_count_1_fu_168_p2(31 downto 3);
    tmp_2_fu_228_p4 <= ap_phi_mux_bit_count_2_phi_fu_112_p4(31 downto 3);
    tmp_nbreadreq_fu_70_p3 <= (0=>(codeword_stream_empty_n), others=>'-');
    trunc_ln1_fu_275_p4 <= add_ln214_fu_263_p2(31 downto 3);
    trunc_ln204_fu_156_p1 <= bit_buffer_reg_98(6 - 1 downto 0);
    trunc_ln214_fu_259_p1 <= bit_count_fu_62(3 - 1 downto 0);
    trunc_ln_fu_160_p3 <= (trunc_ln204_fu_156_p1 & code_1_fu_144_p1);
    zext_ln206_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bit_buffer_reg_98),32));
    zext_ln214_1_fu_285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_275_p4),30));
    zext_ln214_2_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln214_3_fu_293_p2),32));
    zext_ln214_fu_289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln214_1_fu_269_p2),32));
end behav;
