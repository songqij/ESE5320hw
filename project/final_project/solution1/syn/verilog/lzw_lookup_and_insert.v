// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lzw_lookup_and_insert (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hash_table_address0,
        hash_table_ce0,
        hash_table_we0,
        hash_table_d0,
        hash_table_q0,
        assoc_mem_quarter_0_address0,
        assoc_mem_quarter_0_ce0,
        assoc_mem_quarter_0_we0,
        assoc_mem_quarter_0_d0,
        assoc_mem_quarter_0_q0,
        assoc_mem_quarter_1_address0,
        assoc_mem_quarter_1_ce0,
        assoc_mem_quarter_1_we0,
        assoc_mem_quarter_1_d0,
        assoc_mem_quarter_1_q0,
        assoc_mem_quarter_2_address0,
        assoc_mem_quarter_2_ce0,
        assoc_mem_quarter_2_we0,
        assoc_mem_quarter_2_d0,
        assoc_mem_quarter_2_q0,
        assoc_mem_quarter_3_address0,
        assoc_mem_quarter_3_ce0,
        assoc_mem_quarter_3_we0,
        assoc_mem_quarter_3_d0,
        assoc_mem_quarter_3_q0,
        assoc_mem_value_address0,
        assoc_mem_value_ce0,
        assoc_mem_value_we0,
        assoc_mem_value_d0,
        assoc_mem_value_q0,
        assoc_mem_fill_read,
        key,
        nextCode,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [14:0] hash_table_address0;
output   hash_table_ce0;
output   hash_table_we0;
output  [32:0] hash_table_d0;
input  [32:0] hash_table_q0;
output  [4:0] assoc_mem_quarter_0_address0;
output   assoc_mem_quarter_0_ce0;
output   assoc_mem_quarter_0_we0;
output  [63:0] assoc_mem_quarter_0_d0;
input  [63:0] assoc_mem_quarter_0_q0;
output  [4:0] assoc_mem_quarter_1_address0;
output   assoc_mem_quarter_1_ce0;
output   assoc_mem_quarter_1_we0;
output  [63:0] assoc_mem_quarter_1_d0;
input  [63:0] assoc_mem_quarter_1_q0;
output  [4:0] assoc_mem_quarter_2_address0;
output   assoc_mem_quarter_2_ce0;
output   assoc_mem_quarter_2_we0;
output  [63:0] assoc_mem_quarter_2_d0;
input  [63:0] assoc_mem_quarter_2_q0;
output  [4:0] assoc_mem_quarter_3_address0;
output   assoc_mem_quarter_3_ce0;
output   assoc_mem_quarter_3_we0;
output  [63:0] assoc_mem_quarter_3_d0;
input  [63:0] assoc_mem_quarter_3_q0;
output  [5:0] assoc_mem_value_address0;
output   assoc_mem_value_ce0;
output   assoc_mem_value_we0;
output  [11:0] assoc_mem_value_d0;
input  [11:0] assoc_mem_value_q0;
input  [31:0] assoc_mem_fill_read;
input  [19:0] key;
input  [11:0] nextCode;
output  [31:0] ap_return_0;
output  [0:0] ap_return_1;
output  [31:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] hash_table_address0;
reg hash_table_ce0;
reg hash_table_we0;
reg[4:0] assoc_mem_quarter_0_address0;
reg assoc_mem_quarter_0_ce0;
reg assoc_mem_quarter_0_we0;
reg[4:0] assoc_mem_quarter_1_address0;
reg assoc_mem_quarter_1_ce0;
reg assoc_mem_quarter_1_we0;
reg[4:0] assoc_mem_quarter_2_address0;
reg assoc_mem_quarter_2_ce0;
reg assoc_mem_quarter_2_we0;
reg[4:0] assoc_mem_quarter_3_address0;
reg assoc_mem_quarter_3_ce0;
reg assoc_mem_quarter_3_we0;
reg[5:0] assoc_mem_value_address0;
reg assoc_mem_value_ce0;
reg assoc_mem_value_we0;
reg[31:0] ap_return_0;
reg[0:0] ap_return_1;
reg[31:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] key_quarter_0_fu_361_p1;
reg   [4:0] key_quarter_0_reg_957;
wire   [63:0] zext_ln10_fu_365_p1;
reg   [63:0] zext_ln10_reg_962;
wire   [4:0] add_ln12_fu_369_p2;
wire    ap_CS_fsm_state2;
wire   [31:0] hashed_5_fu_430_p2;
wire   [0:0] icmp_ln12_fu_375_p2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] and_ln47_fu_520_p2;
reg   [0:0] and_ln47_reg_991;
reg   [4:0] assoc_mem_quarter_0_addr_reg_995;
reg   [4:0] assoc_mem_quarter_1_addr_reg_1000;
reg   [4:0] assoc_mem_quarter_2_addr_reg_1005;
reg   [4:0] assoc_mem_quarter_3_addr_reg_1010;
reg   [63:0] match_quarter_0_reg_1015;
wire    ap_CS_fsm_state5;
reg   [63:0] match_quarter_1_reg_1020;
reg   [63:0] match_quarter_2_reg_1025;
reg   [63:0] match_quarter_3_reg_1030;
wire   [63:0] match_fu_584_p2;
reg   [63:0] match_reg_1035;
wire   [0:0] icmp_ln93_fu_590_p2;
reg   [0:0] icmp_ln93_reg_1040;
wire   [31:0] upper_ptr_1_fu_677_p3;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln99_fu_596_p2;
wire   [31:0] lower_ptr_2_fu_685_p3;
wire   [5:0] addr_fu_697_p2;
reg   [5:0] addr_reg_1057;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln124_fu_703_p2;
reg   [0:0] icmp_ln124_reg_1062;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire   [4:0] add_ln12_1_fu_713_p2;
wire    ap_CS_fsm_state10;
wire   [31:0] hashed_11_fu_774_p2;
wire   [0:0] icmp_ln12_1_fu_719_p2;
reg   [14:0] hash_table_addr_1_reg_1089;
wire    ap_CS_fsm_state11;
reg   [4:0] i_reg_230;
reg   [31:0] hashed_2_reg_241;
reg   [31:0] upper_ptr_reg_253;
reg   [31:0] lower_ptr_reg_265;
reg   [4:0] i_1_reg_276;
reg   [31:0] hashed_8_reg_287;
reg   [11:0] ap_phi_mux_result_write_assign_phi_fu_302_p10;
reg   [11:0] result_write_assign_reg_299;
wire    ap_CS_fsm_state12;
wire   [0:0] grp_fu_353_p3;
wire   [0:0] icmp_ln79_fu_863_p2;
reg   [0:0] ap_phi_mux_hit_write_assign_phi_fu_321_p10;
reg   [0:0] hit_write_assign_reg_317;
reg   [31:0] ap_phi_mux_phi_ln158_phi_fu_341_p10;
reg   [31:0] phi_ln158_reg_338;
wire   [31:0] add_ln85_fu_903_p2;
wire   [63:0] zext_ln42_fu_496_p1;
wire   [63:0] zext_ln116_fu_553_p1;
wire   [63:0] zext_ln117_fu_557_p1;
wire   [63:0] zext_ln118_fu_562_p1;
wire   [63:0] zext_ln119_fu_567_p1;
wire   [63:0] zext_ln128_fu_709_p1;
wire   [63:0] zext_ln28_fu_840_p1;
wire   [63:0] zext_ln80_fu_869_p1;
wire   [63:0] i_cast_fu_381_p1;
wire   [63:0] lshr_ln13_fu_385_p2;
wire   [0:0] trunc_ln13_fu_390_p1;
wire   [31:0] zext_ln13_fu_394_p1;
wire   [31:0] hashed_3_fu_398_p2;
wire   [31:0] shl_ln14_fu_404_p2;
wire   [31:0] hashed_4_fu_410_p2;
wire   [25:0] lshr_ln_fu_416_p4;
wire   [31:0] zext_ln15_fu_426_p1;
wire   [22:0] trunc_ln17_fu_440_p1;
wire   [11:0] trunc_ln17_4_fu_456_p1;
wire   [25:0] shl_ln_fu_444_p3;
wire   [25:0] empty_53_fu_436_p1;
wire   [14:0] trunc_ln17_1_fu_460_p3;
wire   [14:0] trunc_ln17_2_fu_452_p1;
wire   [25:0] hashed_fu_468_p2;
wire   [14:0] trunc_ln3_fu_480_p4;
wire   [14:0] add_ln11_fu_474_p2;
wire   [14:0] hashed_12_fu_490_p2;
wire   [19:0] stored_key_fu_501_p1;
wire   [0:0] icmp_ln47_fu_515_p2;
wire   [4:0] key_quarter_1_fu_526_p4;
wire   [4:0] key_quarter_2_fu_535_p4;
wire   [4:0] key_quarter_3_fu_544_p4;
wire   [63:0] and_ln121_1_fu_578_p2;
wire   [63:0] and_ln121_fu_572_p2;
wire   [31:0] add_ln101_fu_602_p2;
wire   [31:0] sub_ln101_fu_616_p2;
wire   [30:0] lshr_ln101_1_fu_622_p4;
wire   [31:0] zext_ln101_fu_632_p1;
wire   [30:0] lshr_ln101_2_fu_642_p4;
wire   [0:0] tmp_fu_608_p3;
wire   [31:0] sub_ln101_1_fu_636_p2;
wire   [31:0] zext_ln101_1_fu_652_p1;
wire   [31:0] ptr_fu_656_p3;
wire   [0:0] tobool_i_i_fu_664_p3;
wire   [31:0] lower_ptr_1_fu_671_p2;
wire   [5:0] trunc_ln96_fu_693_p1;
wire   [63:0] i_1_cast_fu_725_p1;
wire   [63:0] lshr_ln13_1_fu_729_p2;
wire   [0:0] trunc_ln13_1_fu_734_p1;
wire   [31:0] zext_ln13_1_fu_738_p1;
wire   [31:0] hashed_9_fu_742_p2;
wire   [31:0] shl_ln14_1_fu_748_p2;
wire   [31:0] hashed_10_fu_754_p2;
wire   [25:0] lshr_ln15_1_fu_760_p4;
wire   [31:0] zext_ln15_1_fu_770_p1;
wire   [22:0] trunc_ln17_5_fu_784_p1;
wire   [11:0] trunc_ln17_7_fu_800_p1;
wire   [25:0] shl_ln17_1_fu_788_p3;
wire   [25:0] empty_55_fu_780_p1;
wire   [14:0] trunc_ln17_3_fu_804_p3;
wire   [14:0] trunc_ln17_6_fu_796_p1;
wire   [25:0] hashed_6_fu_812_p2;
wire   [14:0] trunc_ln18_1_fu_824_p4;
wire   [14:0] add_ln11_1_fu_818_p2;
wire   [14:0] hashed_13_fu_834_p2;
wire   [25:0] tmp_4_fu_854_p4;
wire   [63:0] shl_ln80_fu_873_p2;
wire   [31:0] zext_ln145_fu_909_p1;
reg   [31:0] ap_return_0_preg;
reg   [0:0] ap_return_1_preg;
reg   [31:0] ap_return_2_preg;
reg   [11:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 1'd0;
#0 ap_return_2_preg = 32'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
                ap_return_0_preg[0] <= 1'b0;
        ap_return_0_preg[1] <= 1'b0;
        ap_return_0_preg[2] <= 1'b0;
        ap_return_0_preg[3] <= 1'b0;
        ap_return_0_preg[4] <= 1'b0;
        ap_return_0_preg[5] <= 1'b0;
        ap_return_0_preg[6] <= 1'b0;
        ap_return_0_preg[7] <= 1'b0;
        ap_return_0_preg[8] <= 1'b0;
        ap_return_0_preg[9] <= 1'b0;
        ap_return_0_preg[10] <= 1'b0;
        ap_return_0_preg[11] <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
                        ap_return_0_preg[11 : 0] <= zext_ln145_fu_909_p1[11 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 1'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_1_preg <= ap_phi_mux_hit_write_assign_phi_fu_321_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_return_2_preg <= ap_phi_mux_phi_ln158_phi_fu_341_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        hashed_2_reg_241 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln12_fu_375_p2 == 1'd0))) begin
        hashed_2_reg_241 <= hashed_5_fu_430_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln124_fu_703_p2 == 1'd1) | (icmp_ln93_reg_1040 == 1'd1)))) begin
        hashed_8_reg_287 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln12_1_fu_719_p2 == 1'd0))) begin
        hashed_8_reg_287 <= hashed_11_fu_774_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln47_fu_520_p2)))) begin
        hit_write_assign_reg_317 <= 1'd1;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))))) begin
        hit_write_assign_reg_317 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln124_fu_703_p2 == 1'd1) | (icmp_ln93_reg_1040 == 1'd1)))) begin
        i_1_reg_276 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln12_1_fu_719_p2 == 1'd0))) begin
        i_1_reg_276 <= add_ln12_1_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_230 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln12_fu_375_p2 == 1'd0))) begin
        i_reg_230 <= add_ln12_fu_369_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln93_fu_590_p2 == 1'd0))) begin
        lower_ptr_reg_265 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln99_fu_596_p2 == 1'd1))) begin
        lower_ptr_reg_265 <= lower_ptr_2_fu_685_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        phi_ln158_reg_338 <= add_ln85_fu_903_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln47_fu_520_p2)))) begin
        phi_ln158_reg_338 <= assoc_mem_fill_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln47_fu_520_p2))) begin
        result_write_assign_reg_299 <= {{hash_table_q0[31:20]}};
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        result_write_assign_reg_299 <= assoc_mem_value_q0;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))))) begin
        result_write_assign_reg_299 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln93_fu_590_p2 == 1'd0))) begin
        upper_ptr_reg_253 <= 32'd64;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln99_fu_596_p2 == 1'd1))) begin
        upper_ptr_reg_253 <= upper_ptr_1_fu_677_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln93_reg_1040 == 1'd0))) begin
        addr_reg_1057 <= addr_fu_697_p2;
        icmp_ln124_reg_1062 <= icmp_ln124_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln47_reg_991 <= and_ln47_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'd0 == and_ln47_fu_520_p2))) begin
        assoc_mem_quarter_0_addr_reg_995 <= zext_ln116_fu_553_p1;
        assoc_mem_quarter_1_addr_reg_1000 <= zext_ln117_fu_557_p1;
        assoc_mem_quarter_2_addr_reg_1005 <= zext_ln118_fu_562_p1;
        assoc_mem_quarter_3_addr_reg_1010 <= zext_ln119_fu_567_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_table_addr_1_reg_1089 <= zext_ln28_fu_840_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln93_reg_1040 <= icmp_ln93_fu_590_p2;
        match_quarter_0_reg_1015 <= assoc_mem_quarter_0_q0;
        match_quarter_1_reg_1020 <= assoc_mem_quarter_1_q0;
        match_quarter_2_reg_1025 <= assoc_mem_quarter_2_q0;
        match_quarter_3_reg_1030 <= assoc_mem_quarter_3_q0;
        match_reg_1035 <= match_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        key_quarter_0_reg_957 <= key_quarter_0_fu_361_p1;
        zext_ln10_reg_962[19 : 0] <= zext_ln10_fu_365_p1[19 : 0];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))))) begin
        ap_phi_mux_hit_write_assign_phi_fu_321_p10 = 1'd0;
    end else begin
        ap_phi_mux_hit_write_assign_phi_fu_321_p10 = hit_write_assign_reg_317;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        ap_phi_mux_phi_ln158_phi_fu_341_p10 = add_ln85_fu_903_p2;
    end else if ((((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))))) begin
        ap_phi_mux_phi_ln158_phi_fu_341_p10 = assoc_mem_fill_read;
    end else begin
        ap_phi_mux_phi_ln158_phi_fu_341_p10 = phi_ln158_reg_338;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd0) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))) | ((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991)))))) begin
        ap_phi_mux_result_write_assign_phi_fu_302_p10 = 12'd0;
    end else begin
        ap_phi_mux_result_write_assign_phi_fu_302_p10 = result_write_assign_reg_299;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_0 = zext_ln145_fu_909_p1;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_1 = ap_phi_mux_hit_write_assign_phi_fu_321_p10;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_return_2 = ap_phi_mux_phi_ln158_phi_fu_341_p10;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        assoc_mem_quarter_0_address0 = assoc_mem_quarter_0_addr_reg_995;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        assoc_mem_quarter_0_address0 = zext_ln116_fu_553_p1;
    end else begin
        assoc_mem_quarter_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        assoc_mem_quarter_0_ce0 = 1'b1;
    end else begin
        assoc_mem_quarter_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        assoc_mem_quarter_0_we0 = 1'b1;
    end else begin
        assoc_mem_quarter_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        assoc_mem_quarter_1_address0 = assoc_mem_quarter_1_addr_reg_1000;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        assoc_mem_quarter_1_address0 = zext_ln117_fu_557_p1;
    end else begin
        assoc_mem_quarter_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        assoc_mem_quarter_1_ce0 = 1'b1;
    end else begin
        assoc_mem_quarter_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        assoc_mem_quarter_1_we0 = 1'b1;
    end else begin
        assoc_mem_quarter_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        assoc_mem_quarter_2_address0 = assoc_mem_quarter_2_addr_reg_1005;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        assoc_mem_quarter_2_address0 = zext_ln118_fu_562_p1;
    end else begin
        assoc_mem_quarter_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        assoc_mem_quarter_2_ce0 = 1'b1;
    end else begin
        assoc_mem_quarter_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        assoc_mem_quarter_2_we0 = 1'b1;
    end else begin
        assoc_mem_quarter_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        assoc_mem_quarter_3_address0 = assoc_mem_quarter_3_addr_reg_1010;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        assoc_mem_quarter_3_address0 = zext_ln119_fu_567_p1;
    end else begin
        assoc_mem_quarter_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        assoc_mem_quarter_3_ce0 = 1'b1;
    end else begin
        assoc_mem_quarter_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        assoc_mem_quarter_3_we0 = 1'b1;
    end else begin
        assoc_mem_quarter_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        assoc_mem_value_address0 = zext_ln80_fu_869_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        assoc_mem_value_address0 = zext_ln128_fu_709_p1;
    end else begin
        assoc_mem_value_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8))) begin
        assoc_mem_value_ce0 = 1'b1;
    end else begin
        assoc_mem_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((icmp_ln79_fu_863_p2 == 1'd1) & (grp_fu_353_p3 == 1'd1) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        assoc_mem_value_we0 = 1'b1;
    end else begin
        assoc_mem_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        hash_table_address0 = hash_table_addr_1_reg_1089;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        hash_table_address0 = zext_ln28_fu_840_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        hash_table_address0 = zext_ln42_fu_496_p1;
    end else begin
        hash_table_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3))) begin
        hash_table_ce0 = 1'b1;
    end else begin
        hash_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (((grp_fu_353_p3 == 1'd0) & (icmp_ln124_reg_1062 == 1'd1) & (1'd0 == and_ln47_reg_991)) | ((grp_fu_353_p3 == 1'd0) & (icmp_ln93_reg_1040 == 1'd1) & (1'd0 == and_ln47_reg_991))))) begin
        hash_table_we0 = 1'b1;
    end else begin
        hash_table_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln12_fu_375_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'd1 == and_ln47_fu_520_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln93_fu_590_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln99_fu_596_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & ((icmp_ln124_fu_703_p2 == 1'd1) | (icmp_ln93_reg_1040 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln12_1_fu_719_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_602_p2 = (lower_ptr_reg_265 + upper_ptr_reg_253);

assign add_ln11_1_fu_818_p2 = (trunc_ln17_3_fu_804_p3 + trunc_ln17_6_fu_796_p1);

assign add_ln11_fu_474_p2 = (trunc_ln17_1_fu_460_p3 + trunc_ln17_2_fu_452_p1);

assign add_ln12_1_fu_713_p2 = (i_1_reg_276 + 5'd1);

assign add_ln12_fu_369_p2 = (i_reg_230 + 5'd1);

assign add_ln85_fu_903_p2 = (assoc_mem_fill_read + 32'd1);

assign addr_fu_697_p2 = ($signed(trunc_ln96_fu_693_p1) + $signed(6'd63));

assign and_ln121_1_fu_578_p2 = (assoc_mem_quarter_3_q0 & assoc_mem_quarter_1_q0);

assign and_ln121_fu_572_p2 = (assoc_mem_quarter_2_q0 & assoc_mem_quarter_0_q0);

assign and_ln47_fu_520_p2 = (icmp_ln47_fu_515_p2 & grp_fu_353_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign assoc_mem_quarter_0_d0 = (shl_ln80_fu_873_p2 | match_quarter_0_reg_1015);

assign assoc_mem_quarter_1_d0 = (shl_ln80_fu_873_p2 | match_quarter_1_reg_1020);

assign assoc_mem_quarter_2_d0 = (shl_ln80_fu_873_p2 | match_quarter_2_reg_1025);

assign assoc_mem_quarter_3_d0 = (shl_ln80_fu_873_p2 | match_quarter_3_reg_1030);

assign assoc_mem_value_d0 = nextCode;

assign empty_53_fu_436_p1 = hashed_2_reg_241[25:0];

assign empty_55_fu_780_p1 = hashed_8_reg_287[25:0];

assign grp_fu_353_p3 = hash_table_q0[32'd32];

assign hash_table_d0 = {{{{1'd1}, {nextCode}}}, {key}};

assign hashed_10_fu_754_p2 = (shl_ln14_1_fu_748_p2 + hashed_9_fu_742_p2);

assign hashed_11_fu_774_p2 = (zext_ln15_1_fu_770_p1 ^ hashed_10_fu_754_p2);

assign hashed_12_fu_490_p2 = (trunc_ln3_fu_480_p4 ^ add_ln11_fu_474_p2);

assign hashed_13_fu_834_p2 = (trunc_ln18_1_fu_824_p4 ^ add_ln11_1_fu_818_p2);

assign hashed_3_fu_398_p2 = (hashed_2_reg_241 + zext_ln13_fu_394_p1);

assign hashed_4_fu_410_p2 = (shl_ln14_fu_404_p2 + hashed_3_fu_398_p2);

assign hashed_5_fu_430_p2 = (zext_ln15_fu_426_p1 ^ hashed_4_fu_410_p2);

assign hashed_6_fu_812_p2 = (shl_ln17_1_fu_788_p3 + empty_55_fu_780_p1);

assign hashed_9_fu_742_p2 = (hashed_8_reg_287 + zext_ln13_1_fu_738_p1);

assign hashed_fu_468_p2 = (shl_ln_fu_444_p3 + empty_53_fu_436_p1);

assign i_1_cast_fu_725_p1 = i_1_reg_276;

assign i_cast_fu_381_p1 = i_reg_230;

assign icmp_ln124_fu_703_p2 = ((upper_ptr_reg_253 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln12_1_fu_719_p2 = ((i_1_reg_276 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln12_fu_375_p2 = ((i_reg_230 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_515_p2 = ((stored_key_fu_501_p1 == key) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_863_p2 = ((tmp_4_fu_854_p4 == 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_590_p2 = ((match_fu_584_p2 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_596_p2 = (($signed(upper_ptr_reg_253) > $signed(lower_ptr_reg_265)) ? 1'b1 : 1'b0);

assign key_quarter_0_fu_361_p1 = key[4:0];

assign key_quarter_1_fu_526_p4 = {{key[9:5]}};

assign key_quarter_2_fu_535_p4 = {{key[14:10]}};

assign key_quarter_3_fu_544_p4 = {{key[19:15]}};

assign lower_ptr_1_fu_671_p2 = (ptr_fu_656_p3 + 32'd1);

assign lower_ptr_2_fu_685_p3 = ((tobool_i_i_fu_664_p3[0:0] == 1'b1) ? lower_ptr_1_fu_671_p2 : lower_ptr_reg_265);

assign lshr_ln101_1_fu_622_p4 = {{sub_ln101_fu_616_p2[31:1]}};

assign lshr_ln101_2_fu_642_p4 = {{add_ln101_fu_602_p2[31:1]}};

assign lshr_ln13_1_fu_729_p2 = zext_ln10_reg_962 >> i_1_cast_fu_725_p1;

assign lshr_ln13_fu_385_p2 = zext_ln10_reg_962 >> i_cast_fu_381_p1;

assign lshr_ln15_1_fu_760_p4 = {{hashed_10_fu_754_p2[31:6]}};

assign lshr_ln_fu_416_p4 = {{hashed_4_fu_410_p2[31:6]}};

assign match_fu_584_p2 = (and_ln121_fu_572_p2 & and_ln121_1_fu_578_p2);

assign ptr_fu_656_p3 = ((tmp_fu_608_p3[0:0] == 1'b1) ? sub_ln101_1_fu_636_p2 : zext_ln101_1_fu_652_p1);

assign shl_ln14_1_fu_748_p2 = hashed_9_fu_742_p2 << 32'd10;

assign shl_ln14_fu_404_p2 = hashed_3_fu_398_p2 << 32'd10;

assign shl_ln17_1_fu_788_p3 = {{trunc_ln17_5_fu_784_p1}, {3'd0}};

assign shl_ln80_fu_873_p2 = 64'd1 << zext_ln80_fu_869_p1;

assign shl_ln_fu_444_p3 = {{trunc_ln17_fu_440_p1}, {3'd0}};

assign stored_key_fu_501_p1 = hash_table_q0[19:0];

assign sub_ln101_1_fu_636_p2 = (32'd0 - zext_ln101_fu_632_p1);

assign sub_ln101_fu_616_p2 = (32'd0 - add_ln101_fu_602_p2);

assign tmp_4_fu_854_p4 = {{assoc_mem_fill_read[31:6]}};

assign tmp_fu_608_p3 = add_ln101_fu_602_p2[32'd31];

assign tobool_i_i_fu_664_p3 = match_reg_1035[ptr_fu_656_p3];

assign trunc_ln13_1_fu_734_p1 = lshr_ln13_1_fu_729_p2[0:0];

assign trunc_ln13_fu_390_p1 = lshr_ln13_fu_385_p2[0:0];

assign trunc_ln17_1_fu_460_p3 = {{trunc_ln17_4_fu_456_p1}, {3'd0}};

assign trunc_ln17_2_fu_452_p1 = hashed_2_reg_241[14:0];

assign trunc_ln17_3_fu_804_p3 = {{trunc_ln17_7_fu_800_p1}, {3'd0}};

assign trunc_ln17_4_fu_456_p1 = hashed_2_reg_241[11:0];

assign trunc_ln17_5_fu_784_p1 = hashed_8_reg_287[22:0];

assign trunc_ln17_6_fu_796_p1 = hashed_8_reg_287[14:0];

assign trunc_ln17_7_fu_800_p1 = hashed_8_reg_287[11:0];

assign trunc_ln17_fu_440_p1 = hashed_2_reg_241[22:0];

assign trunc_ln18_1_fu_824_p4 = {{hashed_6_fu_812_p2[25:11]}};

assign trunc_ln3_fu_480_p4 = {{hashed_fu_468_p2[25:11]}};

assign trunc_ln96_fu_693_p1 = upper_ptr_reg_253[5:0];

assign upper_ptr_1_fu_677_p3 = ((tobool_i_i_fu_664_p3[0:0] == 1'b1) ? upper_ptr_reg_253 : ptr_fu_656_p3);

assign zext_ln101_1_fu_652_p1 = lshr_ln101_2_fu_642_p4;

assign zext_ln101_fu_632_p1 = lshr_ln101_1_fu_622_p4;

assign zext_ln10_fu_365_p1 = key;

assign zext_ln116_fu_553_p1 = key_quarter_0_reg_957;

assign zext_ln117_fu_557_p1 = key_quarter_1_fu_526_p4;

assign zext_ln118_fu_562_p1 = key_quarter_2_fu_535_p4;

assign zext_ln119_fu_567_p1 = key_quarter_3_fu_544_p4;

assign zext_ln128_fu_709_p1 = addr_reg_1057;

assign zext_ln13_1_fu_738_p1 = trunc_ln13_1_fu_734_p1;

assign zext_ln13_fu_394_p1 = trunc_ln13_fu_390_p1;

assign zext_ln145_fu_909_p1 = ap_phi_mux_result_write_assign_phi_fu_302_p10;

assign zext_ln15_1_fu_770_p1 = lshr_ln15_1_fu_760_p4;

assign zext_ln15_fu_426_p1 = lshr_ln_fu_416_p4;

assign zext_ln28_fu_840_p1 = hashed_13_fu_834_p2;

assign zext_ln42_fu_496_p1 = hashed_12_fu_490_p2;

assign zext_ln80_fu_869_p1 = assoc_mem_fill_read;

always @ (posedge ap_clk) begin
    zext_ln10_reg_962[63:20] <= 44'b00000000000000000000000000000000000000000000;
    ap_return_0_preg[31:12] <= 20'b00000000000000000000;
end

endmodule //lzw_lookup_and_insert
